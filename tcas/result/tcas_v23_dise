KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-45"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 1
333
true2
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

222
add5
  br i1 %98, label %99, label %116, !dbg !199
size: 0 3 1 4
Num: 3 4
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %65, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %83, label %84, label %89, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %98, label %99, label %116, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %137, label %138, label %143, !dbg !198
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %150, label %151, !dbg !215
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %65, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %83, label %84, label %89, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %98, label %99, label %116, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %137, label %138, label %143, !dbg !198
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %150, label %151, !dbg !215
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %47, label %49, label %62, !dbg !184
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %119, label %121, label %133, !dbg !208
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %or.cond11, label %150, label %151, !dbg !215
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %or.cond11, label %150, label %151, !dbg !215
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %153, label %154, label %155, !dbg !218
333
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %65, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %65, !dbg !181

true1
  br i1 %47, label %49, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

true1
  br i1 %52, label %54, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

true3
  %61 = xor i1 %60, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %52, label %54, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

true2
  store i32 %64, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %72, label %79, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

true3
  %78 = icmp sge i32 %73, %77, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %or.cond7, label %72, label %79, !dbg !190

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

true2
  store i32 %81, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %83, label %84, label %89, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %79, %62
  %82 = load i32* %result.i.i, align 4, !dbg !194
  %83 = icmp ne i32 %82, 0, !dbg !179
  br i1 %83, label %84, label %89, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %79, %62
  %82 = load i32* %result.i.i, align 4, !dbg !194
  %83 = icmp ne i32 %82, 0, !dbg !179
  br i1 %83, label %84, label %89, !dbg !179

true3
  %87 = icmp slt i32 %85, %86, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

add8
  br i1 %83, label %84, label %89, !dbg !179

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

true2
  store i32 %91, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

true1
  br i1 %or.cond9, label %106, label %113, !dbg !202
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

true3
  %112 = icmp sge i32 %107, %111, !dbg !205
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %or.cond9, label %106, label %113, !dbg !202

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

true2
  store i32 %115, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

true1
  br i1 %119, label %121, label %133, !dbg !208
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

true1
  br i1 %124, label %126, label %133, !dbg !208
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %119, label %121, label %133, !dbg !208

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

true3
  %132 = icmp sge i32 %127, %131, !dbg !211
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %119, label %121, label %133, !dbg !208

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %124, label %126, label %133, !dbg !208

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

true2
  store i32 %135, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %137, label %138, label %143, !dbg !198
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %133, %113
  %136 = load i32* %result.i3.i, align 4, !dbg !212
  %137 = icmp ne i32 %136, 0, !dbg !198
  br i1 %137, label %138, label %143, !dbg !198

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %133, %113
  %136 = load i32* %result.i3.i, align 4, !dbg !212
  %137 = icmp ne i32 %136, 0, !dbg !198
  br i1 %137, label %138, label %143, !dbg !198

true3
  %141 = icmp slt i32 %139, %140, !dbg !213
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

add8
  br i1 %137, label %138, label %143, !dbg !198

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

true2
  store i32 %145, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:143                                     ; preds = %138, %Non_Crossing_Biased_Descend.exit.i
  %144 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %141, %138 ]
  %145 = zext i1 %144 to i32
  store i32 %145, i32* %need_downward_RA.i, align 4
  %146 = load i32* %need_upward_RA.i, align 4, !dbg !215
  %147 = icmp ne i32 %146, 0, !dbg !215
  %148 = load i32* %need_downward_RA.i, align 4, !dbg !215
  %149 = icmp ne i32 %148, 0, !dbg !215
  %or.cond11 = and i1 %147, %149, !dbg !215
  br i1 %or.cond11, label %150, label %151, !dbg !215

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:143                                     ; preds = %138, %Non_Crossing_Biased_Descend.exit.i
  %144 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %141, %138 ]
  %145 = zext i1 %144 to i32
  store i32 %145, i32* %need_downward_RA.i, align 4
  %146 = load i32* %need_upward_RA.i, align 4, !dbg !215
  %147 = icmp ne i32 %146, 0, !dbg !215
  %148 = load i32* %need_downward_RA.i, align 4, !dbg !215
  %149 = icmp ne i32 %148, 0, !dbg !215
  %or.cond11 = and i1 %147, %149, !dbg !215
  br i1 %or.cond11, label %150, label %151, !dbg !215

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

true1
  br i1 %153, label %154, label %155, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

true1
  br i1 %157, label %158, label %159, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %157, label %158, label %159, !dbg !221

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %157, label %158, label %159, !dbg !221

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

222
add5
  store i32 %160, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond35, label %189, label %187, !dbg !226
add5
  %192 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %190, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %191), !dbg !229
size: 3 18 4 21
Num: 18 21
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %65, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %83, label %84, label %89, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %98, label %99, label %116, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %137, label %138, label %143, !dbg !198
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %150, label %151, !dbg !215
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %65, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %83, label %84, label %89, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %98, label %99, label %116, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %137, label %138, label %143, !dbg !198
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %150, label %151, !dbg !215
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %or.cond7, label %72, label %79, !dbg !190
  br i1 %43, label %44, label %65, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %47, label %49, label %62, !dbg !184
add4
  br i1 %or.cond9, label %106, label %113, !dbg !202
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %119, label %121, label %133, !dbg !208
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %98, label %99, label %116, !dbg !199
add4
  br i1 %124, label %126, label %133, !dbg !208
  br i1 %119, label %121, label %133, !dbg !208
add4
  br i1 %153, label %154, label %155, !dbg !218
  br i1 %or.cond11, label %150, label %151, !dbg !215
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %or.cond11, label %150, label %151, !dbg !215
add4
  br i1 %157, label %158, label %159, !dbg !221
  br i1 %153, label %154, label %155, !dbg !218
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %65, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %65, !dbg !181

true1
  br i1 %47, label %49, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

true1
  br i1 %52, label %54, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

true3
  %61 = xor i1 %60, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %52, label %54, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

true2
  store i32 %64, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %72, label %79, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:65                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %66 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %67 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %68 = icmp slt i32 %66, %67, !dbg !189
  %69 = zext i1 %68 to i32, !dbg !189
  %70 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %71 = icmp sge i32 %70, 300, !dbg !190
  %or.cond7 = and i1 %68, %71, !dbg !190
  br i1 %or.cond7, label %72, label %79, !dbg !190

true3
  %78 = icmp sge i32 %73, %77, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

add8
  br i1 %or.cond7, label %72, label %79, !dbg !190

; <label>:72                                      ; preds = %65
  %73 = load i32* @Up_Separation, align 4, !dbg !190
  %74 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %75 = sext i32 %74 to i64, !dbg !192
  %76 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %75, !dbg !192
  %77 = load i32* %76, align 4, !dbg !192
  %78 = icmp sge i32 %73, %77, !dbg !193
  br label %79

true2
  store i32 %81, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %65, !dbg !181

; <label>:79                                      ; preds = %72, %65
  %80 = phi i1 [ false, %65 ], [ %78, %72 ]
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %83, label %84, label %89, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %79, %62
  %82 = load i32* %result.i.i, align 4, !dbg !194
  %83 = icmp ne i32 %82, 0, !dbg !179
  br i1 %83, label %84, label %89, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %79, %62
  %82 = load i32* %result.i.i, align 4, !dbg !194
  %83 = icmp ne i32 %82, 0, !dbg !179
  br i1 %83, label %84, label %89, !dbg !179

true3
  %87 = icmp slt i32 %85, %86, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

add8
  br i1 %83, label %84, label %89, !dbg !179

; <label>:84                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %85 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %86 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %87 = icmp slt i32 %85, %86, !dbg !195
  %88 = zext i1 %87 to i32, !dbg !195
  br label %89

true2
  store i32 %91, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:89                                      ; preds = %84, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %87, %84 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Up_Separation, align 4, !dbg !197
  %93 = add nsw i32 %92, 100, !dbg !197
  %94 = load i32* @Down_Separation, align 4, !dbg !197
  %95 = icmp sgt i32 %93, %94, !dbg !197
  %96 = zext i1 %95 to i32, !dbg !197
  store i32 %96, i32* %upward_preferred.i1.i, align 4, !dbg !197
  %97 = load i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = icmp ne i32 %97, 0, !dbg !199
  br i1 %98, label %99, label %116, !dbg !199

true1
  br i1 %or.cond9, label %106, label %113, !dbg !202
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:99                                      ; preds = %89
  %100 = load i32* @Own_Tracked_Alt, align 4, !dbg !201
  %101 = load i32* @Other_Tracked_Alt, align 4, !dbg !201
  %102 = icmp slt i32 %100, %101, !dbg !201
  %103 = zext i1 %102 to i32, !dbg !201
  %104 = load i32* @Cur_Vertical_Sep, align 4, !dbg !202
  %105 = icmp sge i32 %104, 300, !dbg !202
  %or.cond9 = and i1 %102, %105, !dbg !202
  br i1 %or.cond9, label %106, label %113, !dbg !202

true3
  %112 = icmp sge i32 %107, %111, !dbg !205
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

add8
  br i1 %or.cond9, label %106, label %113, !dbg !202

; <label>:106                                     ; preds = %99
  %107 = load i32* @Down_Separation, align 4, !dbg !202
  %108 = load i32* @Alt_Layer_Value, align 4, !dbg !204
  %109 = sext i32 %108 to i64, !dbg !204
  %110 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %109, !dbg !204
  %111 = load i32* %110, align 4, !dbg !204
  %112 = icmp sge i32 %107, %111, !dbg !205
  br label %113

true2
  store i32 %115, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:113                                     ; preds = %106, %99
  %114 = phi i1 [ false, %99 ], [ %112, %106 ]
  %115 = zext i1 %114 to i32
  store i32 %115, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !206

true1
  br i1 %119, label %121, label %133, !dbg !208
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:116                                     ; preds = %89
  %117 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %118 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %119 = icmp slt i32 %117, %118, !dbg !207
  %120 = zext i1 %119 to i32, !dbg !207
  br i1 %119, label %121, label %133, !dbg !208

true1
  br i1 %124, label %126, label %133, !dbg !208
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

add8
  br i1 %119, label %121, label %133, !dbg !208

; <label>:121                                     ; preds = %116
  %122 = load i32* @Other_Tracked_Alt, align 4, !dbg !207
  %123 = load i32* @Own_Tracked_Alt, align 4, !dbg !207
  %124 = icmp slt i32 %122, %123, !dbg !207
  %125 = zext i1 %124 to i32, !dbg !207
  br i1 %124, label %126, label %133, !dbg !208

true3
  %132 = icmp sge i32 %127, %131, !dbg !211
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %119, label %121, label %133, !dbg !208

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

add8
  br i1 %124, label %126, label %133, !dbg !208

; <label>:126                                     ; preds = %121
  %127 = load i32* @Up_Separation, align 4, !dbg !208
  %128 = load i32* @Alt_Layer_Value, align 4, !dbg !210
  %129 = sext i32 %128 to i64, !dbg !210
  %130 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %129, !dbg !210
  %131 = load i32* %130, align 4, !dbg !210
  %132 = icmp sge i32 %127, %131, !dbg !211
  br label %133

true2
  store i32 %135, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %98, label %99, label %116, !dbg !199

; <label>:133                                     ; preds = %121, %126, %116
  %134 = phi i1 [ true, %116 ], [ false, %121 ], [ %132, %126 ]
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %137, label %138, label %143, !dbg !198
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %133, %113
  %136 = load i32* %result.i3.i, align 4, !dbg !212
  %137 = icmp ne i32 %136, 0, !dbg !198
  br i1 %137, label %138, label %143, !dbg !198

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %133, %113
  %136 = load i32* %result.i3.i, align 4, !dbg !212
  %137 = icmp ne i32 %136, 0, !dbg !198
  br i1 %137, label %138, label %143, !dbg !198

true3
  %141 = icmp slt i32 %139, %140, !dbg !213
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

add8
  br i1 %137, label %138, label %143, !dbg !198

; <label>:138                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %139 = load i32* @Other_Tracked_Alt, align 4, !dbg !213
  %140 = load i32* @Own_Tracked_Alt, align 4, !dbg !213
  %141 = icmp slt i32 %139, %140, !dbg !213
  %142 = zext i1 %141 to i32, !dbg !213
  br label %143

true2
  store i32 %145, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:143                                     ; preds = %138, %Non_Crossing_Biased_Descend.exit.i
  %144 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %141, %138 ]
  %145 = zext i1 %144 to i32
  store i32 %145, i32* %need_downward_RA.i, align 4
  %146 = load i32* %need_upward_RA.i, align 4, !dbg !215
  %147 = icmp ne i32 %146, 0, !dbg !215
  %148 = load i32* %need_downward_RA.i, align 4, !dbg !215
  %149 = icmp ne i32 %148, 0, !dbg !215
  %or.cond11 = and i1 %147, %149, !dbg !215
  br i1 %or.cond11, label %150, label %151, !dbg !215

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:143                                     ; preds = %138, %Non_Crossing_Biased_Descend.exit.i
  %144 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %141, %138 ]
  %145 = zext i1 %144 to i32
  store i32 %145, i32* %need_downward_RA.i, align 4
  %146 = load i32* %need_upward_RA.i, align 4, !dbg !215
  %147 = icmp ne i32 %146, 0, !dbg !215
  %148 = load i32* %need_downward_RA.i, align 4, !dbg !215
  %149 = icmp ne i32 %148, 0, !dbg !215
  %or.cond11 = and i1 %147, %149, !dbg !215
  br i1 %or.cond11, label %150, label %151, !dbg !215

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:150                                     ; preds = %143
  store i32 0, i32* %alt_sep.i, align 4, !dbg !217
  br label %alt_sep_test.exit, !dbg !217

true1
  br i1 %153, label %154, label %155, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:151                                     ; preds = %143
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !218
  %153 = icmp ne i32 %152, 0, !dbg !218
  br i1 %153, label %154, label %155, !dbg !218

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:154                                     ; preds = %151
  store i32 1, i32* %alt_sep.i, align 4, !dbg !220
  br label %alt_sep_test.exit, !dbg !220

true1
  br i1 %157, label %158, label %159, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:155                                     ; preds = %151
  %156 = load i32* %need_downward_RA.i, align 4, !dbg !221
  %157 = icmp ne i32 %156, 0, !dbg !221
  br i1 %157, label %158, label %159, !dbg !221

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

add8
  br i1 %157, label %158, label %159, !dbg !221

; <label>:158                                     ; preds = %155
  store i32 2, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit, !dbg !223

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %150, label %151, !dbg !215

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %153, label %154, label %155, !dbg !218

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

add8
  br i1 %157, label %158, label %159, !dbg !221

; <label>:159                                     ; preds = %155
  store i32 0, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit

true2
  store i32 %160, i32* %ret, align 4, !dbg !171
true3
  %188 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !228
add8
  br i1 %or.cond35, label %189, label %187, !dbg !226

; <label>:187                                     ; preds = %alt_sep_test.exit
  %188 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !228
  br label %189, !dbg !228

true3
  %192 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %190, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %191), !dbg !229
222
add5
  %192 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %190, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %191), !dbg !229
size: 18 18 21 21
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(140030699537408, 45911888, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:193
0
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
memory: 17
0
0
0
2
0
0
0
2
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:190: ASSERTION FAIL: ret==2
KLEE: NOTE: now ignoring this error at this location
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
0
2
2
0
2
2
2
2
0
2
2
2
2
0
2
2
2
2
2
2
2
2
0
2
2
0
2
2
2
2
2
2
2
2
2
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v23.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
1
1
0
0
1
1
0
0
0
0
1
1
0
0
1
1
0
memory: 28
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
memory: 28
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
0
2
0
0
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
0
2
2
0
2
2
2
0
2
0
2
2
2
2
0
2
2
2
2
2
2
2
2
0
2
2
0
2
2
2
2
2
2
2
2
2
2
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
memory: 29
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
1
1
0
0
1
1
0
0
0
0
1
1
0
0
1
1
0
0
1
1
0
0
[0;1;34m
Run Time: 1.923900e+02 5.571218e+01
Analysis Time: 0.000000e+00
Update State Time: 5.835000e-03
Update Summary Time: 1.412000e-03
Prune State Time: 0.000000e+00 4.908400e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 29
[0m1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
Elapsed: 00:03:12


KLEE: done: total instructions = 269920
KLEE: done: completed paths = 3114
KLEE: done: generated tests = 0
160.12user 22.04system 3:12.61elapsed 94%CPU (0avgtext+0avgdata 45436maxresident)k
0inputs+736outputs (0major+11777100minor)pagefaults 0swaps
