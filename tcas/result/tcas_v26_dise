KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-54"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
add2
111
Num: 1 0
333
true1
  br i1 %6, label %7, label %10, !dbg !172
222
size: 1 1 0 1
Num: 1 1
333
true2
  store i32 %4, i32* %enabled.i, align 4, !dbg !170
222
add5
  store i32 %12, i32* %enabled.i, align 4
add5
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
size: 1 2 1 2
Num: 2 2
add4
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %46, label %48, label %61, !dbg !185
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %120, label %122, label %134, !dbg !210
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %154, label %155, label %156, !dbg !220
333
true2
  store i32 %4, i32* %enabled.i, align 4, !dbg !170
true3
  %9 = icmp sgt i32 %8, 600, !dbg !172
add8
  br i1 %6, label %7, label %10, !dbg !172

; <label>:7                                       ; preds = %0
  %8 = load i32* @Cur_Vertical_Sep, align 4, !dbg !172
  %9 = icmp sgt i32 %8, 600, !dbg !172
  br label %10

true2
  store i32 %12, i32* %enabled.i, align 4
true1
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
true1
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:26                                      ; preds = %21
  %27 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %28 = icmp ne i32 %27, 0, !dbg !176
  %29 = load i32* %intent_not_known.i, align 4, !dbg !176
  %30 = icmp ne i32 %29, 0, !dbg !176
  %or.cond = and i1 %28, %30, !dbg !176
  %or.cond.not = xor i1 %or.cond, true, !dbg !176
  %31 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %32 = icmp ne i32 %31, 0, !dbg !176
  %or.cond3 = and i1 %or.cond.not, %32, !dbg !176
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

true2
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

true1
  br i1 %46, label %48, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

true1
  br i1 %51, label %53, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

true3
  %60 = xor i1 %59, true, !dbg !188
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %51, label %53, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

true2
  store i32 %63, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

true1
  br i1 %or.cond5, label %71, label %78, !dbg !191
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

true3
  %77 = icmp sge i32 %72, %76, !dbg !194
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond5, label %71, label %78, !dbg !191

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

true2
  store i32 %80, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

true3
  %86 = icmp slt i32 %84, %85, !dbg !196
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %89, i32* %need_upward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

true1
  br i1 %or.cond7, label %107, label %114, !dbg !204
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

true3
  %113 = icmp sge i32 %108, %112, !dbg !207
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond7, label %107, label %114, !dbg !204

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

true2
  store i32 %116, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

true1
  br i1 %120, label %122, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

true1
  br i1 %125, label %127, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

true3
  %133 = icmp sge i32 %128, %132, !dbg !213
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %125, label %127, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

true2
  store i32 %136, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %138, label %139, label %144, !dbg !200
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

true3
  %142 = icmp slt i32 %140, %141, !dbg !215
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %138, label %139, label %144, !dbg !200

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

true2
  store i32 %146, i32* %need_downward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %154, label %155, label %156, !dbg !220
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true1
  br i1 %158, label %159, label %160, !dbg !223
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

222
add5
  store i32 %161, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond33, label %190, label %188, !dbg !228
add5
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %192), !dbg !231
size: 2 17 2 22
Num: 17 22
add4
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %46, label %48, label %61, !dbg !185
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %120, label %122, label %134, !dbg !210
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %154, label %155, label %156, !dbg !220
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %9 = icmp sgt i32 %8, 600, !dbg !172
add8
  br i1 %6, label %7, label %10, !dbg !172

; <label>:7                                       ; preds = %0
  %8 = load i32* @Cur_Vertical_Sep, align 4, !dbg !172
  %9 = icmp sgt i32 %8, 600, !dbg !172
  br label %10

true2
  store i32 %12, i32* %enabled.i, align 4
true3
  %20 = icmp eq i32 %19, 0, !dbg !174
add8
  br i1 %17, label %18, label %21, !dbg !174

; <label>:18                                      ; preds = %10
  %19 = load i32* @Other_RAC, align 4, !dbg !174
  %20 = icmp eq i32 %19, 0, !dbg !174
  br label %21

true2
  store i32 %23, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:26                                      ; preds = %21
  %27 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %28 = icmp ne i32 %27, 0, !dbg !176
  %29 = load i32* %intent_not_known.i, align 4, !dbg !176
  %30 = icmp ne i32 %29, 0, !dbg !176
  %or.cond = and i1 %28, %30, !dbg !176
  %or.cond.not = xor i1 %or.cond, true, !dbg !176
  %31 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %32 = icmp ne i32 %31, 0, !dbg !176
  %or.cond3 = and i1 %or.cond.not, %32, !dbg !176
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

true2
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

true1
  br i1 %46, label %48, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

true1
  br i1 %51, label %53, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

true3
  %60 = xor i1 %59, true, !dbg !188
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %51, label %53, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

true2
  store i32 %63, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

true1
  br i1 %or.cond5, label %71, label %78, !dbg !191
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

true3
  %77 = icmp sge i32 %72, %76, !dbg !194
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond5, label %71, label %78, !dbg !191

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

true2
  store i32 %80, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

true3
  %86 = icmp slt i32 %84, %85, !dbg !196
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %89, i32* %need_upward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

true1
  br i1 %or.cond7, label %107, label %114, !dbg !204
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

true3
  %113 = icmp sge i32 %108, %112, !dbg !207
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond7, label %107, label %114, !dbg !204

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

true2
  store i32 %116, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

true1
  br i1 %120, label %122, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

true1
  br i1 %125, label %127, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

true3
  %133 = icmp sge i32 %128, %132, !dbg !213
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %125, label %127, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

true2
  store i32 %136, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %138, label %139, label %144, !dbg !200
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

true3
  %142 = icmp slt i32 %140, %141, !dbg !215
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %138, label %139, label %144, !dbg !200

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

true2
  store i32 %146, i32* %need_downward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %154, label %155, label %156, !dbg !220
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true1
  br i1 %158, label %159, label %160, !dbg !223
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

true2
  store i32 %161, i32* %ret, align 4, !dbg !171
true3
  %189 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 191, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
add8
  br i1 %or.cond33, label %190, label %188, !dbg !228

; <label>:188                                     ; preds = %alt_sep_test.exit
  %189 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 191, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
  br label %190, !dbg !230

true3
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %192), !dbg !231
222
add5
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %192), !dbg !231
size: 17 18 22 22
Num: 18 22
add4
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176
add4
  br i1 %42, label %43, label %64, !dbg !182
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %99, label %100, label %117, !dbg !201
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %138, label %139, label %144, !dbg !200
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %or.cond9, label %151, label %152, !dbg !217
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add4
  br i1 %46, label %48, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %or.cond5, label %71, label %78, !dbg !191
  br i1 %42, label %43, label %64, !dbg !182
add4
  br i1 %51, label %53, label %61, !dbg !185
  br i1 %46, label %48, label %61, !dbg !185
add4
  br i1 %or.cond7, label %107, label %114, !dbg !204
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %120, label %122, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %99, label %100, label %117, !dbg !201
add4
  br i1 %125, label %127, label %134, !dbg !210
  br i1 %120, label %122, label %134, !dbg !210
add4
  br i1 %154, label %155, label %156, !dbg !220
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %or.cond9, label %151, label %152, !dbg !217
add4
  br i1 %158, label %159, label %160, !dbg !223
  br i1 %154, label %155, label %156, !dbg !220
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %9 = icmp sgt i32 %8, 600, !dbg !172
add8
  br i1 %6, label %7, label %10, !dbg !172

; <label>:7                                       ; preds = %0
  %8 = load i32* @Cur_Vertical_Sep, align 4, !dbg !172
  %9 = icmp sgt i32 %8, 600, !dbg !172
  br label %10

true2
  store i32 %12, i32* %enabled.i, align 4
true3
  %20 = icmp eq i32 %19, 0, !dbg !174
add8
  br i1 %17, label %18, label %21, !dbg !174

; <label>:18                                      ; preds = %10
  %19 = load i32* @Other_RAC, align 4, !dbg !174
  %20 = icmp eq i32 %19, 0, !dbg !174
  br label %21

true2
  store i32 %23, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:26                                      ; preds = %21
  %27 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %28 = icmp ne i32 %27, 0, !dbg !176
  %29 = load i32* %intent_not_known.i, align 4, !dbg !176
  %30 = icmp ne i32 %29, 0, !dbg !176
  %or.cond = and i1 %28, %30, !dbg !176
  %or.cond.not = xor i1 %or.cond, true, !dbg !176
  %31 = load i32* %tcas_equipped.i, align 4, !dbg !176
  %32 = icmp ne i32 %31, 0, !dbg !176
  %or.cond3 = and i1 %or.cond.not, %32, !dbg !176
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

true2
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %26
  %33 = load i32* @Climb_Inhibit, align 4, !dbg !178
  %34 = icmp ne i32 %33, 0, !dbg !178
  %35 = load i32* @Up_Separation, align 4, !dbg !178
  %36 = add nsw i32 %35, 100, !dbg !178
  %37 = select i1 %34, i32 %36, i32 %35, !dbg !178
  %38 = load i32* @Down_Separation, align 4, !dbg !179
  %39 = icmp sgt i32 %37, %38, !dbg !179
  %40 = zext i1 %39 to i32, !dbg !179
  store i32 %40, i32* %upward_preferred.i.i, align 4, !dbg !179
  %41 = load i32* %upward_preferred.i.i, align 4, !dbg !182
  %42 = icmp ne i32 %41, 0, !dbg !182
  br i1 %42, label %43, label %64, !dbg !182

true1
  br i1 %46, label %48, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:43                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %44 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %45 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %46 = icmp slt i32 %44, %45, !dbg !184
  %47 = zext i1 %46 to i32, !dbg !184
  br i1 %46, label %48, label %61, !dbg !185

true1
  br i1 %51, label %53, label %61, !dbg !185
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:48                                      ; preds = %43
  %49 = load i32* @Own_Tracked_Alt, align 4, !dbg !184
  %50 = load i32* @Other_Tracked_Alt, align 4, !dbg !184
  %51 = icmp slt i32 %49, %50, !dbg !184
  %52 = zext i1 %51 to i32, !dbg !184
  br i1 %51, label %53, label %61, !dbg !185

true3
  %60 = xor i1 %59, true, !dbg !188
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %46, label %48, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

add8
  br i1 %51, label %53, label %61, !dbg !185

; <label>:53                                      ; preds = %48
  %54 = load i32* @Down_Separation, align 4, !dbg !185
  %55 = load i32* @Alt_Layer_Value, align 4, !dbg !187
  %56 = sext i32 %55 to i64, !dbg !187
  %57 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %56, !dbg !187
  %58 = load i32* %57, align 4, !dbg !187
  %59 = icmp sge i32 %54, %58, !dbg !188
  %60 = xor i1 %59, true, !dbg !188
  br label %61

true2
  store i32 %63, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:61                                      ; preds = %48, %53, %43
  %62 = phi i1 [ true, %43 ], [ false, %48 ], [ %60, %53 ]
  %63 = zext i1 %62 to i32
  store i32 %63, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

true1
  br i1 %or.cond5, label %71, label %78, !dbg !191
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:64                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %65 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %66 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %67 = icmp slt i32 %65, %66, !dbg !190
  %68 = zext i1 %67 to i32, !dbg !190
  %69 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %70 = icmp sge i32 %69, 300, !dbg !191
  %or.cond5 = and i1 %67, %70, !dbg !191
  br i1 %or.cond5, label %71, label %78, !dbg !191

true3
  %77 = icmp sge i32 %72, %76, !dbg !194
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

add8
  br i1 %or.cond5, label %71, label %78, !dbg !191

; <label>:71                                      ; preds = %64
  %72 = load i32* @Up_Separation, align 4, !dbg !191
  %73 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %74 = sext i32 %73 to i64, !dbg !193
  %75 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %74, !dbg !193
  %76 = load i32* %75, align 4, !dbg !193
  %77 = icmp sge i32 %72, %76, !dbg !194
  br label %78

true2
  store i32 %80, i32* %result.i.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %42, label %43, label %64, !dbg !182

; <label>:78                                      ; preds = %71, %64
  %79 = phi i1 [ false, %64 ], [ %77, %71 ]
  %80 = zext i1 %79 to i32
  store i32 %80, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %78, %61
  %81 = load i32* %result.i.i, align 4, !dbg !195
  %82 = icmp ne i32 %81, 0, !dbg !180
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

true3
  %86 = icmp slt i32 %84, %85, !dbg !196
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %82, label %83, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !180

; <label>:83                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %84 = load i32* @Own_Tracked_Alt, align 4, !dbg !196
  %85 = load i32* @Other_Tracked_Alt, align 4, !dbg !196
  %86 = icmp slt i32 %84, %85, !dbg !196
  %87 = zext i1 %86 to i32, !dbg !196
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %89, i32* %need_upward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %83, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %91 = icmp ne i32 %90, 0, !dbg !198
  %92 = load i32* @Up_Separation, align 4, !dbg !198
  %93 = add nsw i32 %92, 100, !dbg !198
  %94 = select i1 %91, i32 %93, i32 %92, !dbg !198
  %95 = load i32* @Down_Separation, align 4, !dbg !199
  %96 = icmp sgt i32 %94, %95, !dbg !199
  %97 = zext i1 %96 to i32, !dbg !199
  store i32 %97, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %98 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %99 = icmp ne i32 %98, 0, !dbg !201
  br i1 %99, label %100, label %117, !dbg !201

true1
  br i1 %or.cond7, label %107, label %114, !dbg !204
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:100                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %101 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %102 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %103 = icmp slt i32 %101, %102, !dbg !203
  %104 = zext i1 %103 to i32, !dbg !203
  %105 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %106 = icmp sge i32 %105, 300, !dbg !204
  %or.cond7 = and i1 %103, %106, !dbg !204
  br i1 %or.cond7, label %107, label %114, !dbg !204

true3
  %113 = icmp sge i32 %108, %112, !dbg !207
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

add8
  br i1 %or.cond7, label %107, label %114, !dbg !204

; <label>:107                                     ; preds = %100
  %108 = load i32* @Down_Separation, align 4, !dbg !204
  %109 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %110 = sext i32 %109 to i64, !dbg !206
  %111 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %110, !dbg !206
  %112 = load i32* %111, align 4, !dbg !206
  %113 = icmp sge i32 %108, %112, !dbg !207
  br label %114

true2
  store i32 %116, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:114                                     ; preds = %107, %100
  %115 = phi i1 [ false, %100 ], [ %113, %107 ]
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

true1
  br i1 %120, label %122, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:117                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %118 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %119 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %120 = icmp slt i32 %118, %119, !dbg !209
  %121 = zext i1 %120 to i32, !dbg !209
  br i1 %120, label %122, label %134, !dbg !210

true1
  br i1 %125, label %127, label %134, !dbg !210
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:122                                     ; preds = %117
  %123 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %124 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %125 = icmp slt i32 %123, %124, !dbg !209
  %126 = zext i1 %125 to i32, !dbg !209
  br i1 %125, label %127, label %134, !dbg !210

true3
  %133 = icmp sge i32 %128, %132, !dbg !213
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %120, label %122, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

add8
  br i1 %125, label %127, label %134, !dbg !210

; <label>:127                                     ; preds = %122
  %128 = load i32* @Up_Separation, align 4, !dbg !210
  %129 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %130 = sext i32 %129 to i64, !dbg !212
  %131 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %130, !dbg !212
  %132 = load i32* %131, align 4, !dbg !212
  %133 = icmp sge i32 %128, %132, !dbg !213
  br label %134

true2
  store i32 %136, i32* %result.i3.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %99, label %100, label %117, !dbg !201

; <label>:134                                     ; preds = %122, %127, %117
  %135 = phi i1 [ true, %117 ], [ false, %122 ], [ %133, %127 ]
  %136 = zext i1 %135 to i32
  store i32 %136, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %138, label %139, label %144, !dbg !200
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

Non_Crossing_Biased_Descend.exit.i:               ; preds = %134, %114
  %137 = load i32* %result.i3.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !200
  br i1 %138, label %139, label %144, !dbg !200

true3
  %142 = icmp slt i32 %140, %141, !dbg !215
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

add8
  br i1 %138, label %139, label %144, !dbg !200

; <label>:139                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %140 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %141 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %142 = icmp slt i32 %140, %141, !dbg !215
  %143 = zext i1 %142 to i32, !dbg !215
  br label %144

true2
  store i32 %146, i32* %need_downward_RA.i, align 4
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:144                                     ; preds = %139, %Non_Crossing_Biased_Descend.exit.i
  %145 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %142, %139 ]
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %need_downward_RA.i, align 4
  %147 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %148 = icmp ne i32 %147, 0, !dbg !217
  %149 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %150 = icmp ne i32 %149, 0, !dbg !217
  %or.cond9 = and i1 %148, %150, !dbg !217
  br i1 %or.cond9, label %151, label %152, !dbg !217

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:151                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %154, label %155, label %156, !dbg !220
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:152                                     ; preds = %144
  %153 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %154 = icmp ne i32 %153, 0, !dbg !220
  br i1 %154, label %155, label %156, !dbg !220

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:155                                     ; preds = %152
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true1
  br i1 %158, label %159, label %160, !dbg !223
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:156                                     ; preds = %152
  %157 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %158 = icmp ne i32 %157, 0, !dbg !223
  br i1 %158, label %159, label %160, !dbg !223

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:159                                     ; preds = %156
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
add8
  br i1 %25, label %26, label %alt_sep_test.exit, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond3, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !176

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond9, label %151, label %152, !dbg !217

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %154, label %155, label %156, !dbg !220

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %158, label %159, label %160, !dbg !223

; <label>:160                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

true2
  store i32 %161, i32* %ret, align 4, !dbg !171
true3
  %189 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 191, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
add8
  br i1 %or.cond33, label %190, label %188, !dbg !228

; <label>:188                                     ; preds = %alt_sep_test.exit
  %189 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 191, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
  br label %190, !dbg !230

true3
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %192), !dbg !231
222
add5
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %192), !dbg !231
size: 18 18 22 22
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(139849745794048, 29123888, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v26.c:194
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v26.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
2
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v26.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v26.c:191: ASSERTION FAIL: ret==0
KLEE: NOTE: now ignoring this error at this location
[0;1;34mDiSE Early terminated: 0x1c7c160
[0m1
0
0
0
2
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
memory: 11
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
[0;1;34m
Run Time: 5.355000e+01 1.218062e+01
Analysis Time: 0.000000e+00
Update State Time: 2.869000e-03
Update Summary Time: 4.720000e-04
Prune State Time: 0.000000e+00 2.280600e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 11
[0m0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
Elapsed: 00:00:53


KLEE: done: total instructions = 124391
KLEE: done: completed paths = 1143
KLEE: done: generated tests = 0
46.01user 4.26system 0:53.83elapsed 93%CPU (0avgtext+0avgdata 30284maxresident)k
0inputs+584outputs (0major+2591167minor)pagefaults 0swaps
