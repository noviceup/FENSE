KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-60"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 2
333
true2
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

true2
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

222
add5
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
add5
  br i1 %44, label %45, label %66, !dbg !181
add5
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
add5
  br i1 %102, label %103, label %120, !dbg !200
size: 0 4 2 7
Num: 4 7
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %44, label %45, label %66, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %102, label %103, label %120, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %141, label %142, label %147, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %154, label %155, !dbg !216
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %44, label %45, label %66, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %102, label %103, label %120, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %141, label %142, label %147, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %154, label %155, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %123, label %125, label %137, !dbg !209
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %or.cond11, label %154, label %155, !dbg !216
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %or.cond11, label %154, label %155, !dbg !216
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %157, label %158, label %159, !dbg !219
333
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

true1
  br i1 %48, label %50, label %63, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

true1
  br i1 %53, label %55, label %63, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %48, label %50, label %63, !dbg !184

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

true3
  %62 = xor i1 %61, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %48, label %50, label %63, !dbg !184

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %53, label %55, label %63, !dbg !184

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

true2
  store i32 %65, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %73, label %80, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

true3
  %79 = icmp sge i32 %74, %78, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %or.cond7, label %73, label %80, !dbg !190

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

true2
  store i32 %82, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %80, %63
  %83 = load i32* %result.i.i, align 4, !dbg !194
  %84 = icmp ne i32 %83, 0, !dbg !179
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %80, %63
  %83 = load i32* %result.i.i, align 4, !dbg !194
  %84 = icmp ne i32 %83, 0, !dbg !179
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

true3
  %88 = icmp slt i32 %86, %87, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

add8
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

true2
  store i32 %91, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

true1
  br i1 %or.cond9, label %110, label %117, !dbg !203
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

true3
  %116 = icmp sge i32 %111, %115, !dbg !206
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %or.cond9, label %110, label %117, !dbg !203

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

true2
  store i32 %119, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %123, label %125, label %137, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

true1
  br i1 %128, label %130, label %137, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %123, label %125, label %137, !dbg !209

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

true3
  %136 = icmp sge i32 %131, %135, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %123, label %125, label %137, !dbg !209

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %128, label %130, label %137, !dbg !209

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

true2
  store i32 %139, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %141, label %142, label %147, !dbg !199
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %137, %117
  %140 = load i32* %result.i4.i, align 4, !dbg !213
  %141 = icmp ne i32 %140, 0, !dbg !199
  br i1 %141, label %142, label %147, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %137, %117
  %140 = load i32* %result.i4.i, align 4, !dbg !213
  %141 = icmp ne i32 %140, 0, !dbg !199
  br i1 %141, label %142, label %147, !dbg !199

true3
  %145 = icmp slt i32 %143, %144, !dbg !214
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

add8
  br i1 %141, label %142, label %147, !dbg !199

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

true2
  store i32 %149, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %142, %Non_Crossing_Biased_Descend.exit.i
  %148 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %145, %142 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %need_downward_RA.i, align 4
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %151 = icmp ne i32 %150, 0, !dbg !216
  %152 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %or.cond11 = and i1 %151, %153, !dbg !216
  br i1 %or.cond11, label %154, label %155, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %142, %Non_Crossing_Biased_Descend.exit.i
  %148 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %145, %142 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %need_downward_RA.i, align 4
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %151 = icmp ne i32 %150, 0, !dbg !216
  %152 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %or.cond11 = and i1 %151, %153, !dbg !216
  br i1 %or.cond11, label %154, label %155, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %157, label %158, label %159, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %161, label %162, label %163, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %161, label %162, label %163, !dbg !222

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %161, label %162, label %163, !dbg !222

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

222
add5
  store i32 %164, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond35, label %193, label %191, !dbg !227
add5
  %196 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %194, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %195), !dbg !230
size: 4 18 7 23
Num: 18 23
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %48, label %50, label %63, !dbg !184
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %44, label %45, label %66, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %102, label %103, label %120, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %141, label %142, label %147, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %154, label %155, !dbg !216
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %44, label %45, label %66, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %102, label %103, label %120, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %141, label %142, label %147, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %154, label %155, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %48, label %50, label %63, !dbg !184
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %53, label %55, label %63, !dbg !184
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %or.cond7, label %73, label %80, !dbg !190
  br i1 %44, label %45, label %66, !dbg !181
add4
  br i1 %or.cond9, label %110, label %117, !dbg !203
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %123, label %125, label %137, !dbg !209
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %102, label %103, label %120, !dbg !200
add4
  br i1 %128, label %130, label %137, !dbg !209
  br i1 %123, label %125, label %137, !dbg !209
add4
  br i1 %157, label %158, label %159, !dbg !219
  br i1 %or.cond11, label %154, label %155, !dbg !216
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %or.cond11, label %154, label %155, !dbg !216
add4
  br i1 %161, label %162, label %163, !dbg !222
  br i1 %157, label %158, label %159, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp eq i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  store i32 %38, i32* %result.i.i.i, align 4, !dbg !177
  %39 = load i32* %result.i.i.i, align 4, !dbg !177
  %40 = load i32* @Down_Separation, align 4, !dbg !178
  %41 = icmp sgt i32 %39, %40, !dbg !178
  %42 = zext i1 %41 to i32, !dbg !178
  store i32 %42, i32* %upward_preferred.i.i, align 4, !dbg !178
  %43 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %44 = icmp ne i32 %43, 0, !dbg !181
  br i1 %44, label %45, label %66, !dbg !181

true1
  br i1 %48, label %50, label %63, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:45                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %46 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %47 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %48 = icmp slt i32 %46, %47, !dbg !183
  %49 = zext i1 %48 to i32, !dbg !183
  br i1 %48, label %50, label %63, !dbg !184

true1
  br i1 %53, label %55, label %63, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

add8
  br i1 %48, label %50, label %63, !dbg !184

; <label>:50                                      ; preds = %45
  %51 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %52 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %53 = icmp slt i32 %51, %52, !dbg !183
  %54 = zext i1 %53 to i32, !dbg !183
  br i1 %53, label %55, label %63, !dbg !184

true3
  %62 = xor i1 %61, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %48, label %50, label %63, !dbg !184

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

add8
  br i1 %53, label %55, label %63, !dbg !184

; <label>:55                                      ; preds = %50
  %56 = load i32* @Down_Separation, align 4, !dbg !184
  %57 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %58 = sext i32 %57 to i64, !dbg !186
  %59 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %58, !dbg !186
  %60 = load i32* %59, align 4, !dbg !186
  %61 = icmp sge i32 %56, %60, !dbg !187
  %62 = xor i1 %61, true, !dbg !187
  br label %63

true2
  store i32 %65, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:63                                      ; preds = %50, %55, %45
  %64 = phi i1 [ true, %45 ], [ false, %50 ], [ %62, %55 ]
  %65 = zext i1 %64 to i32
  store i32 %65, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %73, label %80, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:66                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %67 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %69 = icmp slt i32 %67, %68, !dbg !189
  %70 = zext i1 %69 to i32, !dbg !189
  %71 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %72 = icmp sge i32 %71, 300, !dbg !190
  %or.cond7 = and i1 %69, %72, !dbg !190
  br i1 %or.cond7, label %73, label %80, !dbg !190

true3
  %79 = icmp sge i32 %74, %78, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

add8
  br i1 %or.cond7, label %73, label %80, !dbg !190

; <label>:73                                      ; preds = %66
  %74 = load i32* @Up_Separation, align 4, !dbg !190
  %75 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %76 = sext i32 %75 to i64, !dbg !192
  %77 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %76, !dbg !192
  %78 = load i32* %77, align 4, !dbg !192
  %79 = icmp sge i32 %74, %78, !dbg !193
  br label %80

true2
  store i32 %82, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %44, label %45, label %66, !dbg !181

; <label>:80                                      ; preds = %73, %66
  %81 = phi i1 [ false, %66 ], [ %79, %73 ]
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %80, %63
  %83 = load i32* %result.i.i, align 4, !dbg !194
  %84 = icmp ne i32 %83, 0, !dbg !179
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %80, %63
  %83 = load i32* %result.i.i, align 4, !dbg !194
  %84 = icmp ne i32 %83, 0, !dbg !179
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

true3
  %88 = icmp slt i32 %86, %87, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

add8
  br i1 %84, label %85, label %Inhibit_Biased_Climb.exit.i5.i, !dbg !179

; <label>:85                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %86 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %87 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %88 = icmp slt i32 %86, %87, !dbg !195
  %89 = zext i1 %88 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i5.i

true2
  store i32 %91, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i5.i:                   ; preds = %85, %Non_Crossing_Biased_Climb.exit.i
  %90 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %88, %85 ]
  %91 = zext i1 %90 to i32
  store i32 %91, i32* %need_upward_RA.i, align 4
  %92 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %93 = icmp eq i32 %92, 0, !dbg !197
  %94 = load i32* @Up_Separation, align 4, !dbg !197
  %95 = add nsw i32 %94, 100, !dbg !197
  %96 = select i1 %93, i32 %95, i32 %94, !dbg !197
  store i32 %96, i32* %result.i.i1.i, align 4, !dbg !197
  %97 = load i32* %result.i.i1.i, align 4, !dbg !197
  %98 = load i32* @Down_Separation, align 4, !dbg !198
  %99 = icmp sgt i32 %97, %98, !dbg !198
  %100 = zext i1 %99 to i32, !dbg !198
  store i32 %100, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %101 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %102 = icmp ne i32 %101, 0, !dbg !200
  br i1 %102, label %103, label %120, !dbg !200

true1
  br i1 %or.cond9, label %110, label %117, !dbg !203
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:103                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %104 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %105 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %106 = icmp slt i32 %104, %105, !dbg !202
  %107 = zext i1 %106 to i32, !dbg !202
  %108 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %109 = icmp sge i32 %108, 300, !dbg !203
  %or.cond9 = and i1 %106, %109, !dbg !203
  br i1 %or.cond9, label %110, label %117, !dbg !203

true3
  %116 = icmp sge i32 %111, %115, !dbg !206
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

add8
  br i1 %or.cond9, label %110, label %117, !dbg !203

; <label>:110                                     ; preds = %103
  %111 = load i32* @Down_Separation, align 4, !dbg !203
  %112 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %113 = sext i32 %112 to i64, !dbg !205
  %114 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %113, !dbg !205
  %115 = load i32* %114, align 4, !dbg !205
  %116 = icmp sge i32 %111, %115, !dbg !206
  br label %117

true2
  store i32 %119, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:117                                     ; preds = %110, %103
  %118 = phi i1 [ false, %103 ], [ %116, %110 ]
  %119 = zext i1 %118 to i32
  store i32 %119, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %123, label %125, label %137, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:120                                     ; preds = %Inhibit_Biased_Climb.exit.i5.i
  %121 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %122 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %123 = icmp slt i32 %121, %122, !dbg !208
  %124 = zext i1 %123 to i32, !dbg !208
  br i1 %123, label %125, label %137, !dbg !209

true1
  br i1 %128, label %130, label %137, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

add8
  br i1 %123, label %125, label %137, !dbg !209

; <label>:125                                     ; preds = %120
  %126 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %127 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %128 = icmp slt i32 %126, %127, !dbg !208
  %129 = zext i1 %128 to i32, !dbg !208
  br i1 %128, label %130, label %137, !dbg !209

true3
  %136 = icmp sge i32 %131, %135, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %123, label %125, label %137, !dbg !209

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

add8
  br i1 %128, label %130, label %137, !dbg !209

; <label>:130                                     ; preds = %125
  %131 = load i32* @Up_Separation, align 4, !dbg !209
  %132 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %133 = sext i32 %132 to i64, !dbg !211
  %134 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %133, !dbg !211
  %135 = load i32* %134, align 4, !dbg !211
  %136 = icmp sge i32 %131, %135, !dbg !212
  br label %137

true2
  store i32 %139, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %102, label %103, label %120, !dbg !200

; <label>:137                                     ; preds = %125, %130, %120
  %138 = phi i1 [ true, %120 ], [ false, %125 ], [ %136, %130 ]
  %139 = zext i1 %138 to i32
  store i32 %139, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %141, label %142, label %147, !dbg !199
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %137, %117
  %140 = load i32* %result.i4.i, align 4, !dbg !213
  %141 = icmp ne i32 %140, 0, !dbg !199
  br i1 %141, label %142, label %147, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %137, %117
  %140 = load i32* %result.i4.i, align 4, !dbg !213
  %141 = icmp ne i32 %140, 0, !dbg !199
  br i1 %141, label %142, label %147, !dbg !199

true3
  %145 = icmp slt i32 %143, %144, !dbg !214
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

add8
  br i1 %141, label %142, label %147, !dbg !199

; <label>:142                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %143 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %144 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %145 = icmp slt i32 %143, %144, !dbg !214
  %146 = zext i1 %145 to i32, !dbg !214
  br label %147

true2
  store i32 %149, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %142, %Non_Crossing_Biased_Descend.exit.i
  %148 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %145, %142 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %need_downward_RA.i, align 4
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %151 = icmp ne i32 %150, 0, !dbg !216
  %152 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %or.cond11 = and i1 %151, %153, !dbg !216
  br i1 %or.cond11, label %154, label %155, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %142, %Non_Crossing_Biased_Descend.exit.i
  %148 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %145, %142 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %need_downward_RA.i, align 4
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %151 = icmp ne i32 %150, 0, !dbg !216
  %152 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %or.cond11 = and i1 %151, %153, !dbg !216
  br i1 %or.cond11, label %154, label %155, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:154                                     ; preds = %147
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %157, label %158, label %159, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:155                                     ; preds = %147
  %156 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %157 = icmp ne i32 %156, 0, !dbg !219
  br i1 %157, label %158, label %159, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:158                                     ; preds = %155
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %161, label %162, label %163, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:159                                     ; preds = %155
  %160 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %161 = icmp ne i32 %160, 0, !dbg !222
  br i1 %161, label %162, label %163, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %161, label %162, label %163, !dbg !222

; <label>:162                                     ; preds = %159
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %154, label %155, !dbg !216

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %157, label %158, label %159, !dbg !219

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %161, label %162, label %163, !dbg !222

; <label>:163                                     ; preds = %159
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %164, i32* %ret, align 4, !dbg !171
true3
  %192 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !229
add8
  br i1 %or.cond35, label %193, label %191, !dbg !227

; <label>:191                                     ; preds = %alt_sep_test.exit
  %192 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !229
  br label %193, !dbg !229

true3
  %196 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %194, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %195), !dbg !230
222
add5
  %196 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %194, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %195), !dbg !230
size: 18 18 23 23
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(140706842420224, 35273856, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v28.c:193
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v28.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v28.c:190: ASSERTION FAIL: ret==2
KLEE: NOTE: now ignoring this error at this location
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v28.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
0
0
2
0
2
0
2
0
2
memory: 14
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
[0;1;34m
Run Time: 6.247000e+01 1.568328e+01
Analysis Time: 0.000000e+00
Update State Time: 2.963000e-03
Update Summary Time: 4.490000e-04
Prune State Time: 0.000000e+00 2.301700e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 14
[0m0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
Elapsed: 00:01:03


KLEE: done: total instructions = 128513
KLEE: done: completed paths = 1161
KLEE: done: generated tests = 0
53.70user 4.58system 1:02.63elapsed 93%CPU (0avgtext+0avgdata 31688maxresident)k
0inputs+512outputs (0major+3389355minor)pagefaults 0swaps
