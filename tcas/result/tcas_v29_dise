KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-63"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 2
333
true2
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

true2
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

222
add5
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
add5
  br i1 %41, label %42, label %63, !dbg !181
add5
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
add5
  br i1 %96, label %97, label %114, !dbg !200
size: 0 4 2 7
Num: 4 7
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %41, label %42, label %63, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %81, label %82, label %87, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %96, label %97, label %114, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %135, label %136, label %141, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %148, label %149, !dbg !216
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %41, label %42, label %63, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %81, label %82, label %87, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %96, label %97, label %114, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %135, label %136, label %141, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond11, label %148, label %149, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %45, label %47, label %60, !dbg !184
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %117, label %119, label %131, !dbg !209
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %or.cond11, label %148, label %149, !dbg !216
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %or.cond11, label %148, label %149, !dbg !216
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %151, label %152, label %153, !dbg !219
333
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

true2
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

true1
  br i1 %45, label %47, label %60, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

true1
  br i1 %50, label %52, label %60, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %45, label %47, label %60, !dbg !184

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

true3
  %59 = xor i1 %58, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %45, label %47, label %60, !dbg !184

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %50, label %52, label %60, !dbg !184

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

true2
  store i32 %62, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %70, label %77, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

true3
  %76 = icmp sge i32 %71, %75, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %or.cond7, label %70, label %77, !dbg !190

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

true2
  store i32 %79, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %81, label %82, label %87, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %77, %60
  %80 = load i32* %result.i.i, align 4, !dbg !194
  %81 = icmp ne i32 %80, 0, !dbg !179
  br i1 %81, label %82, label %87, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %77, %60
  %80 = load i32* %result.i.i, align 4, !dbg !194
  %81 = icmp ne i32 %80, 0, !dbg !179
  br i1 %81, label %82, label %87, !dbg !179

true3
  %85 = icmp slt i32 %83, %84, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

add8
  br i1 %81, label %82, label %87, !dbg !179

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

true2
  store i32 %89, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

true1
  br i1 %or.cond9, label %104, label %111, !dbg !203
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

true3
  %110 = icmp sge i32 %105, %109, !dbg !206
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %or.cond9, label %104, label %111, !dbg !203

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

true2
  store i32 %113, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %117, label %119, label %131, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

true1
  br i1 %122, label %124, label %131, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %117, label %119, label %131, !dbg !209

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

true3
  %130 = icmp sge i32 %125, %129, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %117, label %119, label %131, !dbg !209

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %122, label %124, label %131, !dbg !209

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

true2
  store i32 %133, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %135, label %136, label %141, !dbg !199
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %131, %111
  %134 = load i32* %result.i4.i, align 4, !dbg !213
  %135 = icmp ne i32 %134, 0, !dbg !199
  br i1 %135, label %136, label %141, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %131, %111
  %134 = load i32* %result.i4.i, align 4, !dbg !213
  %135 = icmp ne i32 %134, 0, !dbg !199
  br i1 %135, label %136, label %141, !dbg !199

true3
  %139 = icmp slt i32 %137, %138, !dbg !214
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

add8
  br i1 %135, label %136, label %141, !dbg !199

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

true2
  store i32 %143, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:141                                     ; preds = %136, %Non_Crossing_Biased_Descend.exit.i
  %142 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %139, %136 ]
  %143 = zext i1 %142 to i32
  store i32 %143, i32* %need_downward_RA.i, align 4
  %144 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %145 = icmp ne i32 %144, 0, !dbg !216
  %146 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %147 = icmp ne i32 %146, 0, !dbg !216
  %or.cond11 = and i1 %145, %147, !dbg !216
  br i1 %or.cond11, label %148, label %149, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:141                                     ; preds = %136, %Non_Crossing_Biased_Descend.exit.i
  %142 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %139, %136 ]
  %143 = zext i1 %142 to i32
  store i32 %143, i32* %need_downward_RA.i, align 4
  %144 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %145 = icmp ne i32 %144, 0, !dbg !216
  %146 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %147 = icmp ne i32 %146, 0, !dbg !216
  %or.cond11 = and i1 %145, %147, !dbg !216
  br i1 %or.cond11, label %148, label %149, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %151, label %152, label %153, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %155, label %156, label %157, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %155, label %156, label %157, !dbg !222

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %155, label %156, label %157, !dbg !222

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

222
add5
  store i32 %158, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond35, label %187, label %185, !dbg !227
add5
  %190 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %189), !dbg !230
size: 4 18 7 23
Num: 18 23
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %41, label %42, label %63, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %81, label %82, label %87, !dbg !179
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %96, label %97, label %114, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %135, label %136, label %141, !dbg !199
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %148, label %149, !dbg !216
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %41, label %42, label %63, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %81, label %82, label %87, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %96, label %97, label %114, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %135, label %136, label %141, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %or.cond11, label %148, label %149, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add4
  br i1 %45, label %47, label %60, !dbg !184
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %or.cond7, label %70, label %77, !dbg !190
  br i1 %41, label %42, label %63, !dbg !181
add4
  br i1 %50, label %52, label %60, !dbg !184
  br i1 %45, label %47, label %60, !dbg !184
add4
  br i1 %or.cond9, label %104, label %111, !dbg !203
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %117, label %119, label %131, !dbg !209
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %96, label %97, label %114, !dbg !200
add4
  br i1 %122, label %124, label %131, !dbg !209
  br i1 %117, label %119, label %131, !dbg !209
add4
  br i1 %151, label %152, label %153, !dbg !219
  br i1 %or.cond11, label %148, label %149, !dbg !216
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %or.cond11, label %148, label %149, !dbg !216
add4
  br i1 %155, label %156, label %157, !dbg !222
  br i1 %151, label %152, label %153, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

true2
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:34                                      ; preds = %27
  %35 = load i32* @Up_Separation, align 4, !dbg !177
  store i32 %35, i32* %result.i.i.i, align 4, !dbg !177
  %36 = load i32* %result.i.i.i, align 4, !dbg !177
  %37 = load i32* @Down_Separation, align 4, !dbg !178
  %38 = icmp sgt i32 %36, %37, !dbg !178
  %39 = zext i1 %38 to i32, !dbg !178
  store i32 %39, i32* %upward_preferred.i.i, align 4, !dbg !178
  %40 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %41 = icmp ne i32 %40, 0, !dbg !181
  br i1 %41, label %42, label %63, !dbg !181

true1
  br i1 %45, label %47, label %60, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:42                                      ; preds = %34
  %43 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %44 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %45 = icmp slt i32 %43, %44, !dbg !183
  %46 = zext i1 %45 to i32, !dbg !183
  br i1 %45, label %47, label %60, !dbg !184

true1
  br i1 %50, label %52, label %60, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

add8
  br i1 %45, label %47, label %60, !dbg !184

; <label>:47                                      ; preds = %42
  %48 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %49 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %50 = icmp slt i32 %48, %49, !dbg !183
  %51 = zext i1 %50 to i32, !dbg !183
  br i1 %50, label %52, label %60, !dbg !184

true3
  %59 = xor i1 %58, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %45, label %47, label %60, !dbg !184

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

add8
  br i1 %50, label %52, label %60, !dbg !184

; <label>:52                                      ; preds = %47
  %53 = load i32* @Down_Separation, align 4, !dbg !184
  %54 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %55 = sext i32 %54 to i64, !dbg !186
  %56 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %55, !dbg !186
  %57 = load i32* %56, align 4, !dbg !186
  %58 = icmp sge i32 %53, %57, !dbg !187
  %59 = xor i1 %58, true, !dbg !187
  br label %60

true2
  store i32 %62, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:60                                      ; preds = %47, %52, %42
  %61 = phi i1 [ true, %42 ], [ false, %47 ], [ %59, %52 ]
  %62 = zext i1 %61 to i32
  store i32 %62, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %70, label %77, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:63                                      ; preds = %34
  %64 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %65 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %66 = icmp slt i32 %64, %65, !dbg !189
  %67 = zext i1 %66 to i32, !dbg !189
  %68 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %69 = icmp sge i32 %68, 300, !dbg !190
  %or.cond7 = and i1 %66, %69, !dbg !190
  br i1 %or.cond7, label %70, label %77, !dbg !190

true3
  %76 = icmp sge i32 %71, %75, !dbg !193
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

add8
  br i1 %or.cond7, label %70, label %77, !dbg !190

; <label>:70                                      ; preds = %63
  %71 = load i32* @Up_Separation, align 4, !dbg !190
  %72 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %73 = sext i32 %72 to i64, !dbg !192
  %74 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %73, !dbg !192
  %75 = load i32* %74, align 4, !dbg !192
  %76 = icmp sge i32 %71, %75, !dbg !193
  br label %77

true2
  store i32 %79, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %41, label %42, label %63, !dbg !181

; <label>:77                                      ; preds = %70, %63
  %78 = phi i1 [ false, %63 ], [ %76, %70 ]
  %79 = zext i1 %78 to i32
  store i32 %79, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %81, label %82, label %87, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %77, %60
  %80 = load i32* %result.i.i, align 4, !dbg !194
  %81 = icmp ne i32 %80, 0, !dbg !179
  br i1 %81, label %82, label %87, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %77, %60
  %80 = load i32* %result.i.i, align 4, !dbg !194
  %81 = icmp ne i32 %80, 0, !dbg !179
  br i1 %81, label %82, label %87, !dbg !179

true3
  %85 = icmp slt i32 %83, %84, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

add8
  br i1 %81, label %82, label %87, !dbg !179

; <label>:82                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %83 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %84 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %85 = icmp slt i32 %83, %84, !dbg !195
  %86 = zext i1 %85 to i32, !dbg !195
  br label %87

true2
  store i32 %89, i32* %need_upward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:87                                      ; preds = %82, %Non_Crossing_Biased_Climb.exit.i
  %88 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %85, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %need_upward_RA.i, align 4
  %90 = load i32* @Up_Separation, align 4, !dbg !197
  store i32 %90, i32* %result.i.i1.i, align 4, !dbg !197
  %91 = load i32* %result.i.i1.i, align 4, !dbg !197
  %92 = load i32* @Down_Separation, align 4, !dbg !198
  %93 = icmp sgt i32 %91, %92, !dbg !198
  %94 = zext i1 %93 to i32, !dbg !198
  store i32 %94, i32* %upward_preferred.i2.i, align 4, !dbg !198
  %95 = load i32* %upward_preferred.i2.i, align 4, !dbg !200
  %96 = icmp ne i32 %95, 0, !dbg !200
  br i1 %96, label %97, label %114, !dbg !200

true1
  br i1 %or.cond9, label %104, label %111, !dbg !203
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:97                                      ; preds = %87
  %98 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %99 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %100 = icmp slt i32 %98, %99, !dbg !202
  %101 = zext i1 %100 to i32, !dbg !202
  %102 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %103 = icmp sge i32 %102, 300, !dbg !203
  %or.cond9 = and i1 %100, %103, !dbg !203
  br i1 %or.cond9, label %104, label %111, !dbg !203

true3
  %110 = icmp sge i32 %105, %109, !dbg !206
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

add8
  br i1 %or.cond9, label %104, label %111, !dbg !203

; <label>:104                                     ; preds = %97
  %105 = load i32* @Down_Separation, align 4, !dbg !203
  %106 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %107 = sext i32 %106 to i64, !dbg !205
  %108 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %107, !dbg !205
  %109 = load i32* %108, align 4, !dbg !205
  %110 = icmp sge i32 %105, %109, !dbg !206
  br label %111

true2
  store i32 %113, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:111                                     ; preds = %104, %97
  %112 = phi i1 [ false, %97 ], [ %110, %104 ]
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %117, label %119, label %131, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:114                                     ; preds = %87
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %116 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %117 = icmp slt i32 %115, %116, !dbg !208
  %118 = zext i1 %117 to i32, !dbg !208
  br i1 %117, label %119, label %131, !dbg !209

true1
  br i1 %122, label %124, label %131, !dbg !209
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

add8
  br i1 %117, label %119, label %131, !dbg !209

; <label>:119                                     ; preds = %114
  %120 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %121 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %122 = icmp slt i32 %120, %121, !dbg !208
  %123 = zext i1 %122 to i32, !dbg !208
  br i1 %122, label %124, label %131, !dbg !209

true3
  %130 = icmp sge i32 %125, %129, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %117, label %119, label %131, !dbg !209

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

add8
  br i1 %122, label %124, label %131, !dbg !209

; <label>:124                                     ; preds = %119
  %125 = load i32* @Up_Separation, align 4, !dbg !209
  %126 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %127 = sext i32 %126 to i64, !dbg !211
  %128 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %127, !dbg !211
  %129 = load i32* %128, align 4, !dbg !211
  %130 = icmp sge i32 %125, %129, !dbg !212
  br label %131

true2
  store i32 %133, i32* %result.i4.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %96, label %97, label %114, !dbg !200

; <label>:131                                     ; preds = %119, %124, %114
  %132 = phi i1 [ true, %114 ], [ false, %119 ], [ %130, %124 ]
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %result.i4.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %135, label %136, label %141, !dbg !199
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %131, %111
  %134 = load i32* %result.i4.i, align 4, !dbg !213
  %135 = icmp ne i32 %134, 0, !dbg !199
  br i1 %135, label %136, label %141, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %131, %111
  %134 = load i32* %result.i4.i, align 4, !dbg !213
  %135 = icmp ne i32 %134, 0, !dbg !199
  br i1 %135, label %136, label %141, !dbg !199

true3
  %139 = icmp slt i32 %137, %138, !dbg !214
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

add8
  br i1 %135, label %136, label %141, !dbg !199

; <label>:136                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %137 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %138 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %139 = icmp slt i32 %137, %138, !dbg !214
  %140 = zext i1 %139 to i32, !dbg !214
  br label %141

true2
  store i32 %143, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:141                                     ; preds = %136, %Non_Crossing_Biased_Descend.exit.i
  %142 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %139, %136 ]
  %143 = zext i1 %142 to i32
  store i32 %143, i32* %need_downward_RA.i, align 4
  %144 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %145 = icmp ne i32 %144, 0, !dbg !216
  %146 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %147 = icmp ne i32 %146, 0, !dbg !216
  %or.cond11 = and i1 %145, %147, !dbg !216
  br i1 %or.cond11, label %148, label %149, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:141                                     ; preds = %136, %Non_Crossing_Biased_Descend.exit.i
  %142 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %139, %136 ]
  %143 = zext i1 %142 to i32
  store i32 %143, i32* %need_downward_RA.i, align 4
  %144 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %145 = icmp ne i32 %144, 0, !dbg !216
  %146 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %147 = icmp ne i32 %146, 0, !dbg !216
  %or.cond11 = and i1 %145, %147, !dbg !216
  br i1 %or.cond11, label %148, label %149, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:148                                     ; preds = %141
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %151, label %152, label %153, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:149                                     ; preds = %141
  %150 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %151 = icmp ne i32 %150, 0, !dbg !219
  br i1 %151, label %152, label %153, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:152                                     ; preds = %149
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %155, label %156, label %157, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:153                                     ; preds = %149
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %155 = icmp ne i32 %154, 0, !dbg !222
  br i1 %155, label %156, label %157, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %155, label %156, label %157, !dbg !222

; <label>:156                                     ; preds = %153
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %34, !dbg !175

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %148, label %149, !dbg !216

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %151, label %152, label %153, !dbg !219

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %155, label %156, label %157, !dbg !222

; <label>:157                                     ; preds = %153
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %158, i32* %ret, align 4, !dbg !171
true3
  %186 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !229
add8
  br i1 %or.cond35, label %187, label %185, !dbg !227

; <label>:185                                     ; preds = %alt_sep_test.exit
  %186 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !229
  br label %187, !dbg !229

true3
  %190 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %189), !dbg !230
222
add5
  %190 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %189), !dbg !230
size: 18 18 23 23
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(140711163835392, 46461504, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v29.c:193
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v29.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
2
0
2
0
0
2
0
2
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v29.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v29.c:190: ASSERTION FAIL: ret==1
KLEE: NOTE: now ignoring this error at this location
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
2
0
2
0
0
2
memory: 7
0
2
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
[0;1;34m
Run Time: 6.992000e+01 2.009383e+01
Analysis Time: 0.000000e+00
Update State Time: 3.201000e-03
Update Summary Time: 5.480000e-04
Prune State Time: 0.000000e+00 2.367800e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 7
[0m0
1
0
Elapsed: 00:01:10


KLEE: done: total instructions = 123311
KLEE: done: completed paths = 1153
KLEE: done: generated tests = 0
59.80user 6.14system 1:10.08elapsed 94%CPU (0avgtext+0avgdata 34552maxresident)k
0inputs+520outputs (0major+3856932minor)pagefaults 0swaps
