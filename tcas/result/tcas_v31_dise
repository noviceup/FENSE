KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-72"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 1
333
true2
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

222
add5
  br i1 %or.cond11, label %163, label %164, !dbg !217
add5
  br i1 %166, label %167, label %168, !dbg !220
size: 0 4 1 6
Num: 4 6
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %74, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %111, label %112, label %129, !dbg !201
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %150, label %151, label %156, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %163, label %164, !dbg !217
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %74, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %111, label %112, label %129, !dbg !201
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %150, label %151, label %156, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %163, label %164, !dbg !217
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %47, label %49, label %62, !dbg !184
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %132, label %134, label %146, !dbg !210
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %or.cond11, label %163, label %164, !dbg !217
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %or.cond11, label %163, label %164, !dbg !217
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %166, label %167, label %168, !dbg !220
333
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %74, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %74, !dbg !181

true1
  br i1 %47, label %49, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

true1
  br i1 %52, label %54, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

true3
  %61 = xor i1 %60, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %52, label %54, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

true2
  store i32 %64, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

true3
  %70 = icmp sle i32 %68, %69, !dbg !188
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %66, label %67, label %71, !dbg !188

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

true2
  store i32 %73, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

true1
  br i1 %or.cond7, label %81, label %88, !dbg !191
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

true3
  %87 = icmp sge i32 %82, %86, !dbg !194
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %or.cond7, label %81, label %88, !dbg !191

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

true2
  store i32 %90, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

true3
  %96 = icmp sle i32 %94, %95, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %92, label %93, label %97, !dbg !195

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

true2
  store i32 %99, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true2
  store i32 %100, i32* %temp.i, align 4, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

true1
  br i1 %or.cond9, label %119, label %126, !dbg !204
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

true3
  %125 = icmp sge i32 %120, %124, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %or.cond9, label %119, label %126, !dbg !204

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

true2
  store i32 %128, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

true1
  br i1 %132, label %134, label %146, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

true1
  br i1 %137, label %139, label %146, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %132, label %134, label %146, !dbg !210

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

true3
  %145 = icmp sge i32 %140, %144, !dbg !213
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %132, label %134, label %146, !dbg !210

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %137, label %139, label %146, !dbg !210

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

true2
  store i32 %148, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %150, label %151, label %156, !dbg !200
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %146, %126
  %149 = load i32* %result.i3.i, align 4, !dbg !214
  %150 = icmp ne i32 %149, 0, !dbg !200
  br i1 %150, label %151, label %156, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %146, %126
  %149 = load i32* %result.i3.i, align 4, !dbg !214
  %150 = icmp ne i32 %149, 0, !dbg !200
  br i1 %150, label %151, label %156, !dbg !200

true3
  %154 = icmp slt i32 %152, %153, !dbg !215
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

add8
  br i1 %150, label %151, label %156, !dbg !200

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

true2
  store i32 %158, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %151, %Non_Crossing_Biased_Descend.exit.i
  %157 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %154, %151 ]
  %158 = zext i1 %157 to i32
  store i32 %158, i32* %need_downward_RA.i, align 4
  %159 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %160 = icmp ne i32 %159, 0, !dbg !217
  %161 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %162 = icmp ne i32 %161, 0, !dbg !217
  %or.cond11 = and i1 %160, %162, !dbg !217
  br i1 %or.cond11, label %163, label %164, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:156                                     ; preds = %151, %Non_Crossing_Biased_Descend.exit.i
  %157 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %154, %151 ]
  %158 = zext i1 %157 to i32
  store i32 %158, i32* %need_downward_RA.i, align 4
  %159 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %160 = icmp ne i32 %159, 0, !dbg !217
  %161 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %162 = icmp ne i32 %161, 0, !dbg !217
  %or.cond11 = and i1 %160, %162, !dbg !217
  br i1 %or.cond11, label %163, label %164, !dbg !217

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %166, label %167, label %168, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true1
  br i1 %170, label %171, label %172, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %170, label %171, label %172, !dbg !223

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %170, label %171, label %172, !dbg !223

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

222
add5
  store i32 %173, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond35, label %202, label %200, !dbg !228
add5
  %205 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %203, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %204), !dbg !231
size: 4 19 6 24
Num: 19 24
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %74, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %111, label %112, label %129, !dbg !201
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %150, label %151, label %156, !dbg !200
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %163, label %164, !dbg !217
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %74, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %111, label %112, label %129, !dbg !201
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %150, label %151, label %156, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %163, label %164, !dbg !217
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %62, !dbg !184
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %66, label %67, label %71, !dbg !188
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %or.cond7, label %81, label %88, !dbg !191
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %92, label %93, label %97, !dbg !195
  br i1 %43, label %44, label %74, !dbg !181
add4
  br i1 %52, label %54, label %62, !dbg !184
  br i1 %47, label %49, label %62, !dbg !184
add4
  br i1 %or.cond9, label %119, label %126, !dbg !204
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %132, label %134, label %146, !dbg !210
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %111, label %112, label %129, !dbg !201
add4
  br i1 %137, label %139, label %146, !dbg !210
  br i1 %132, label %134, label %146, !dbg !210
add4
  br i1 %166, label %167, label %168, !dbg !220
  br i1 %or.cond11, label %163, label %164, !dbg !217
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %or.cond11, label %163, label %164, !dbg !217
add4
  br i1 %170, label %171, label %172, !dbg !223
  br i1 %166, label %167, label %168, !dbg !220
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %74, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %74, !dbg !181

true1
  br i1 %47, label %49, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %62, !dbg !184

true1
  br i1 %52, label %54, label %62, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %51 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %52 = icmp slt i32 %50, %51, !dbg !183
  %53 = zext i1 %52 to i32, !dbg !183
  br i1 %52, label %54, label %62, !dbg !184

true3
  %61 = xor i1 %60, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %47, label %49, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

add8
  br i1 %52, label %54, label %62, !dbg !184

; <label>:54                                      ; preds = %49
  %55 = load i32* @Down_Separation, align 4, !dbg !184
  %56 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %57 = sext i32 %56 to i64, !dbg !186
  %58 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %57, !dbg !186
  %59 = load i32* %58, align 4, !dbg !186
  %60 = icmp sge i32 %55, %59, !dbg !187
  %61 = xor i1 %60, true, !dbg !187
  br label %62

true2
  store i32 %64, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:62                                      ; preds = %49, %54, %44
  %63 = phi i1 [ true, %44 ], [ false, %49 ], [ %61, %54 ]
  %64 = zext i1 %63 to i32
  store i32 %64, i32* %result.i.i, align 4
  %65 = load i32* %result.i.i, align 4, !dbg !188
  %66 = icmp ne i32 %65, 0, !dbg !188
  br i1 %66, label %67, label %71, !dbg !188

true3
  %70 = icmp sle i32 %68, %69, !dbg !188
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

add8
  br i1 %66, label %67, label %71, !dbg !188

; <label>:67                                      ; preds = %62
  %68 = load i32* @Own_Tracked_Alt, align 4, !dbg !188
  %69 = load i32* @Other_Tracked_Alt, align 4, !dbg !188
  %70 = icmp sle i32 %68, %69, !dbg !188
  br label %71

true2
  store i32 %73, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:71                                      ; preds = %67, %62
  %72 = phi i1 [ false, %62 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  store i32 %73, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !189

true1
  br i1 %or.cond7, label %81, label %88, !dbg !191
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:74                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %75 = load i32* @Other_Tracked_Alt, align 4, !dbg !190
  %76 = load i32* @Own_Tracked_Alt, align 4, !dbg !190
  %77 = icmp slt i32 %75, %76, !dbg !190
  %78 = zext i1 %77 to i32, !dbg !190
  %79 = load i32* @Cur_Vertical_Sep, align 4, !dbg !191
  %80 = icmp sge i32 %79, 300, !dbg !191
  %or.cond7 = and i1 %77, %80, !dbg !191
  br i1 %or.cond7, label %81, label %88, !dbg !191

true3
  %87 = icmp sge i32 %82, %86, !dbg !194
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

add8
  br i1 %or.cond7, label %81, label %88, !dbg !191

; <label>:81                                      ; preds = %74
  %82 = load i32* @Up_Separation, align 4, !dbg !191
  %83 = load i32* @Alt_Layer_Value, align 4, !dbg !193
  %84 = sext i32 %83 to i64, !dbg !193
  %85 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %84, !dbg !193
  %86 = load i32* %85, align 4, !dbg !193
  %87 = icmp sge i32 %82, %86, !dbg !194
  br label %88

true2
  store i32 %90, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:88                                      ; preds = %81, %74
  %89 = phi i1 [ false, %74 ], [ %87, %81 ]
  %90 = zext i1 %89 to i32
  store i32 %90, i32* %result.i.i, align 4
  %91 = load i32* %result.i.i, align 4, !dbg !195
  %92 = icmp ne i32 %91, 0, !dbg !195
  br i1 %92, label %93, label %97, !dbg !195

true3
  %96 = icmp sle i32 %94, %95, !dbg !195
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

add8
  br i1 %92, label %93, label %97, !dbg !195

; <label>:93                                      ; preds = %88
  %94 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %95 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %96 = icmp sle i32 %94, %95, !dbg !195
  br label %97

true2
  store i32 %99, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %74, !dbg !181

; <label>:97                                      ; preds = %93, %88
  %98 = phi i1 [ false, %88 ], [ %96, %93 ]
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true2
  store i32 %100, i32* %temp.i, align 4, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %97, %71
  %100 = load i32* %result.i.i, align 4, !dbg !196
  store i32 %100, i32* %temp.i, align 4, !dbg !179
  %101 = load i32* %temp.i, align 4, !dbg !197
  store i32 %101, i32* %need_upward_RA.i, align 4, !dbg !197
  %102 = load i32* @Climb_Inhibit, align 4, !dbg !198
  %103 = icmp ne i32 %102, 0, !dbg !198
  %104 = load i32* @Up_Separation, align 4, !dbg !198
  %105 = add nsw i32 %104, 100, !dbg !198
  %106 = select i1 %103, i32 %105, i32 %104, !dbg !198
  %107 = load i32* @Down_Separation, align 4, !dbg !199
  %108 = icmp sgt i32 %106, %107, !dbg !199
  %109 = zext i1 %108 to i32, !dbg !199
  store i32 %109, i32* %upward_preferred.i1.i, align 4, !dbg !199
  %110 = load i32* %upward_preferred.i1.i, align 4, !dbg !201
  %111 = icmp ne i32 %110, 0, !dbg !201
  br i1 %111, label %112, label %129, !dbg !201

true1
  br i1 %or.cond9, label %119, label %126, !dbg !204
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:112                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %113 = load i32* @Own_Tracked_Alt, align 4, !dbg !203
  %114 = load i32* @Other_Tracked_Alt, align 4, !dbg !203
  %115 = icmp slt i32 %113, %114, !dbg !203
  %116 = zext i1 %115 to i32, !dbg !203
  %117 = load i32* @Cur_Vertical_Sep, align 4, !dbg !204
  %118 = icmp sge i32 %117, 300, !dbg !204
  %or.cond9 = and i1 %115, %118, !dbg !204
  br i1 %or.cond9, label %119, label %126, !dbg !204

true3
  %125 = icmp sge i32 %120, %124, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

add8
  br i1 %or.cond9, label %119, label %126, !dbg !204

; <label>:119                                     ; preds = %112
  %120 = load i32* @Down_Separation, align 4, !dbg !204
  %121 = load i32* @Alt_Layer_Value, align 4, !dbg !206
  %122 = sext i32 %121 to i64, !dbg !206
  %123 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %122, !dbg !206
  %124 = load i32* %123, align 4, !dbg !206
  %125 = icmp sge i32 %120, %124, !dbg !207
  br label %126

true2
  store i32 %128, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:126                                     ; preds = %119, %112
  %127 = phi i1 [ false, %112 ], [ %125, %119 ]
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !208

true1
  br i1 %132, label %134, label %146, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:129                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %132 = icmp slt i32 %130, %131, !dbg !209
  %133 = zext i1 %132 to i32, !dbg !209
  br i1 %132, label %134, label %146, !dbg !210

true1
  br i1 %137, label %139, label %146, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

add8
  br i1 %132, label %134, label %146, !dbg !210

; <label>:134                                     ; preds = %129
  %135 = load i32* @Other_Tracked_Alt, align 4, !dbg !209
  %136 = load i32* @Own_Tracked_Alt, align 4, !dbg !209
  %137 = icmp slt i32 %135, %136, !dbg !209
  %138 = zext i1 %137 to i32, !dbg !209
  br i1 %137, label %139, label %146, !dbg !210

true3
  %145 = icmp sge i32 %140, %144, !dbg !213
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %132, label %134, label %146, !dbg !210

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

add8
  br i1 %137, label %139, label %146, !dbg !210

; <label>:139                                     ; preds = %134
  %140 = load i32* @Up_Separation, align 4, !dbg !210
  %141 = load i32* @Alt_Layer_Value, align 4, !dbg !212
  %142 = sext i32 %141 to i64, !dbg !212
  %143 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %142, !dbg !212
  %144 = load i32* %143, align 4, !dbg !212
  %145 = icmp sge i32 %140, %144, !dbg !213
  br label %146

true2
  store i32 %148, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %111, label %112, label %129, !dbg !201

; <label>:146                                     ; preds = %134, %139, %129
  %147 = phi i1 [ true, %129 ], [ false, %134 ], [ %145, %139 ]
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %150, label %151, label %156, !dbg !200
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %146, %126
  %149 = load i32* %result.i3.i, align 4, !dbg !214
  %150 = icmp ne i32 %149, 0, !dbg !200
  br i1 %150, label %151, label %156, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %146, %126
  %149 = load i32* %result.i3.i, align 4, !dbg !214
  %150 = icmp ne i32 %149, 0, !dbg !200
  br i1 %150, label %151, label %156, !dbg !200

true3
  %154 = icmp slt i32 %152, %153, !dbg !215
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

add8
  br i1 %150, label %151, label %156, !dbg !200

; <label>:151                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %152 = load i32* @Other_Tracked_Alt, align 4, !dbg !215
  %153 = load i32* @Own_Tracked_Alt, align 4, !dbg !215
  %154 = icmp slt i32 %152, %153, !dbg !215
  %155 = zext i1 %154 to i32, !dbg !215
  br label %156

true2
  store i32 %158, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %151, %Non_Crossing_Biased_Descend.exit.i
  %157 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %154, %151 ]
  %158 = zext i1 %157 to i32
  store i32 %158, i32* %need_downward_RA.i, align 4
  %159 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %160 = icmp ne i32 %159, 0, !dbg !217
  %161 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %162 = icmp ne i32 %161, 0, !dbg !217
  %or.cond11 = and i1 %160, %162, !dbg !217
  br i1 %or.cond11, label %163, label %164, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:156                                     ; preds = %151, %Non_Crossing_Biased_Descend.exit.i
  %157 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %154, %151 ]
  %158 = zext i1 %157 to i32
  store i32 %158, i32* %need_downward_RA.i, align 4
  %159 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %160 = icmp ne i32 %159, 0, !dbg !217
  %161 = load i32* %need_downward_RA.i, align 4, !dbg !217
  %162 = icmp ne i32 %161, 0, !dbg !217
  %or.cond11 = and i1 %160, %162, !dbg !217
  br i1 %or.cond11, label %163, label %164, !dbg !217

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:163                                     ; preds = %156
  store i32 0, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %166, label %167, label %168, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:164                                     ; preds = %156
  %165 = load i32* %need_upward_RA.i, align 4, !dbg !220
  %166 = icmp ne i32 %165, 0, !dbg !220
  br i1 %166, label %167, label %168, !dbg !220

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:167                                     ; preds = %164
  store i32 1, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true1
  br i1 %170, label %171, label %172, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:168                                     ; preds = %164
  %169 = load i32* %need_downward_RA.i, align 4, !dbg !223
  %170 = icmp ne i32 %169, 0, !dbg !223
  br i1 %170, label %171, label %172, !dbg !223

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

add8
  br i1 %170, label %171, label %172, !dbg !223

; <label>:171                                     ; preds = %168
  store i32 2, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit, !dbg !225

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %163, label %164, !dbg !217

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %166, label %167, label %168, !dbg !220

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

add8
  br i1 %170, label %171, label %172, !dbg !223

; <label>:172                                     ; preds = %168
  store i32 0, i32* %alt_sep.i, align 4, !dbg !226
  br label %alt_sep_test.exit

true2
  store i32 %173, i32* %ret, align 4, !dbg !171
true3
  %201 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 193, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
add8
  br i1 %or.cond35, label %202, label %200, !dbg !228

; <label>:200                                     ; preds = %alt_sep_test.exit
  %201 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 193, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !230
  br label %202, !dbg !230

true3
  %205 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %203, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %204), !dbg !231
222
add5
  %205 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %203, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %204), !dbg !231
size: 19 19 24 24
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(139711986525184, 33382288, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v31.c:196
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v31.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v31.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
0
0
memory: 7
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
2
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v31.c:193: ASSERTION FAIL: ret==0
KLEE: NOTE: now ignoring this error at this location
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
[0;1;34m
Run Time: 4.981000e+01 1.295783e+01
Analysis Time: 0.000000e+00
Update State Time: 2.835000e-03
Update Summary Time: 4.630000e-04
Prune State Time: 0.000000e+00 2.164400e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 7
[0m1
0
Elapsed: 00:00:50


KLEE: done: total instructions = 130174
KLEE: done: completed paths = 1157
KLEE: done: generated tests = 0
42.85user 3.49system 0:49.83elapsed 92%CPU (0avgtext+0avgdata 31636maxresident)k
0inputs+528outputs (0major+2858815minor)pagefaults 0swaps
