KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-78"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 4
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 1), align 4, !dbg !153
222
add5
  store i32 %76, i32* %result.i.i, align 4
add5
  store i32 %93, i32* %result.i.i, align 4
add5
  store i32 %129, i32* %result.i3.i, align 4
add5
  store i32 %149, i32* %result.i3.i, align 4
add5
  br i1 %151, label %152, label %157, !dbg !199
add5
  store i32 %159, i32* %need_downward_RA.i, align 4
add5
  br i1 %or.cond11, label %164, label %165, !dbg !216
add5
  br i1 %171, label %172, label %173, !dbg !222
size: 0 3 4 10
Num: 3 10
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %167, label %168, label %169, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 1), align 4, !dbg !153
true3
  %73 = xor i1 %72, true, !dbg !187
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %59, label %61, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %64, label %66, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

true2
  store i32 %76, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true3
  %90 = icmp sge i32 %85, %89, !dbg !193
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond7, label %84, label %91, !dbg !190

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

true2
  store i32 %93, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true3
  %99 = icmp slt i32 %97, %98, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %102, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

true3
  %126 = icmp sge i32 %121, %125, !dbg !206
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond9, label %120, label %127, !dbg !203

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

true2
  store i32 %129, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true3
  %146 = icmp sge i32 %141, %145, !dbg !212
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %133, label %135, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %138, label %140, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

true2
  store i32 %149, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %151, label %152, label %157, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

true3
  %155 = icmp slt i32 %153, %154, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %151, label %152, label %157, !dbg !199

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

true2
  store i32 %159, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %167, label %168, label %169, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %171, label %172, label %173, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

222
add5
  store i32 %174, i32* %ret, align 4, !dbg !171
add5
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
add5
  %207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %206), !dbg !230
size: 3 15 10 21
Num: 15 21
add4
  br i1 %55, label %56, label %77, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %112, label %113, label %130, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %151, label %152, label %157, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %164, label %165, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %59, label %61, label %74, !dbg !184
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %77, !dbg !181
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %112, label %113, label %130, !dbg !200
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %151, label %152, label %157, !dbg !199
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %164, label %165, !dbg !216
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %133, label %135, label %147, !dbg !209
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %167, label %168, label %169, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 1), align 4, !dbg !153
true3
  %22 = icmp sgt i32 %21, 600, !dbg !170
add8
  br i1 %or.cond, label %20, label %23, !dbg !170

; <label>:20                                      ; preds = %0
  %21 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %22 = icmp sgt i32 %21, 600, !dbg !170
  br label %23

true2
  store i32 %25, i32* %enabled.i, align 4
true3
  %33 = icmp eq i32 %32, 0, !dbg !173
add8
  br i1 %30, label %31, label %34, !dbg !173

; <label>:31                                      ; preds = %23
  %32 = load i32* @Other_RAC, align 4, !dbg !173
  %33 = icmp eq i32 %32, 0, !dbg !173
  br label %34

true2
  store i32 %36, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:39                                      ; preds = %34
  %40 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %41 = icmp ne i32 %40, 0, !dbg !175
  %42 = load i32* %intent_not_known.i, align 4, !dbg !175
  %43 = icmp ne i32 %42, 0, !dbg !175
  %or.cond3 = and i1 %41, %43, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %44 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %45 = icmp ne i32 %44, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %45, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %77, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %77, !dbg !181

true1
  br i1 %59, label %61, label %74, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

true1
  br i1 %64, label %66, label %74, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %59, label %61, label %74, !dbg !184

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

true3
  %73 = xor i1 %72, true, !dbg !187
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %59, label %61, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %64, label %66, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

true2
  store i32 %76, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %84, label %91, !dbg !190
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

true3
  %90 = icmp sge i32 %85, %89, !dbg !193
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond7, label %84, label %91, !dbg !190

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

true2
  store i32 %93, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %91, %74
  %94 = load i32* %result.i.i, align 4, !dbg !194
  %95 = icmp ne i32 %94, 0, !dbg !179
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %91, %74
  %94 = load i32* %result.i.i, align 4, !dbg !194
  %95 = icmp ne i32 %94, 0, !dbg !179
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

true3
  %99 = icmp slt i32 %97, %98, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %102, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

true1
  br i1 %or.cond9, label %120, label %127, !dbg !203
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

true3
  %126 = icmp sge i32 %121, %125, !dbg !206
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond9, label %120, label %127, !dbg !203

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

true2
  store i32 %129, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %133, label %135, label %147, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

true1
  br i1 %138, label %140, label %147, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %133, label %135, label %147, !dbg !209

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

true3
  %146 = icmp sge i32 %141, %145, !dbg !212
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %133, label %135, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %138, label %140, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

true2
  store i32 %149, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %151, label %152, label %157, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

true3
  %155 = icmp slt i32 %153, %154, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %151, label %152, label %157, !dbg !199

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

true2
  store i32 %159, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %167, label %168, label %169, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %171, label %172, label %173, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %174, i32* %ret, align 4, !dbg !171
true3
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
add8
  br i1 %or.cond33, label %199, label %204, !dbg !227

; <label>:199                                     ; preds = %alt_sep_test.exit
  %200 = load i32* %ret, align 4, !dbg !229
  %201 = icmp eq i32 %200, 1, !dbg !229
  %202 = zext i1 %201 to i32, !dbg !229
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
  br label %204, !dbg !229

true3
  %207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %206), !dbg !230
222
add5
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
add5
  %207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %206), !dbg !230
size: 15 18 21 21
Num: 18 21
add4
  br i1 %55, label %56, label %77, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %112, label %113, label %130, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %151, label %152, label %157, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %164, label %165, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %55, label %56, label %77, !dbg !181
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %59, label %61, label %74, !dbg !184
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %77, !dbg !181
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %59, label %61, label %74, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %64, label %66, label %74, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %84, label %91, !dbg !190
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %112, label %113, label %130, !dbg !200
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %151, label %152, label %157, !dbg !199
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %164, label %165, !dbg !216
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %120, label %127, !dbg !203
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %133, label %135, label %147, !dbg !209
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %112, label %113, label %130, !dbg !200
add4
  br i1 %138, label %140, label %147, !dbg !209
  br i1 %133, label %135, label %147, !dbg !209
add4
  br i1 %167, label %168, label %169, !dbg !219
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %or.cond11, label %164, label %165, !dbg !216
add4
  br i1 %171, label %172, label %173, !dbg !222
  br i1 %167, label %168, label %169, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 1), align 4, !dbg !153
true3
  %22 = icmp sgt i32 %21, 600, !dbg !170
add8
  br i1 %or.cond, label %20, label %23, !dbg !170

; <label>:20                                      ; preds = %0
  %21 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %22 = icmp sgt i32 %21, 600, !dbg !170
  br label %23

true2
  store i32 %25, i32* %enabled.i, align 4
true3
  %33 = icmp eq i32 %32, 0, !dbg !173
add8
  br i1 %30, label %31, label %34, !dbg !173

; <label>:31                                      ; preds = %23
  %32 = load i32* @Other_RAC, align 4, !dbg !173
  %33 = icmp eq i32 %32, 0, !dbg !173
  br label %34

true2
  store i32 %36, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:39                                      ; preds = %34
  %40 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %41 = icmp ne i32 %40, 0, !dbg !175
  %42 = load i32* %intent_not_known.i, align 4, !dbg !175
  %43 = icmp ne i32 %42, 0, !dbg !175
  %or.cond3 = and i1 %41, %43, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %44 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %45 = icmp ne i32 %44, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %45, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %77, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %77, !dbg !181

true1
  br i1 %59, label %61, label %74, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %74, !dbg !184

true1
  br i1 %64, label %66, label %74, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

add8
  br i1 %59, label %61, label %74, !dbg !184

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %74, !dbg !184

true3
  %73 = xor i1 %72, true, !dbg !187
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %59, label %61, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

add8
  br i1 %64, label %66, label %74, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %69 = sext i32 %68 to i64, !dbg !186
  %70 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %69, !dbg !186
  %71 = load i32* %70, align 4, !dbg !186
  %72 = icmp sge i32 %67, %71, !dbg !187
  %73 = xor i1 %72, true, !dbg !187
  br label %74

true2
  store i32 %76, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:74                                      ; preds = %61, %66, %56
  %75 = phi i1 [ true, %56 ], [ false, %61 ], [ %73, %66 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %84, label %91, !dbg !190
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:77                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %78 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %79 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %80 = icmp slt i32 %78, %79, !dbg !189
  %81 = zext i1 %80 to i32, !dbg !189
  %82 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %83 = icmp sge i32 %82, 300, !dbg !190
  %or.cond7 = and i1 %80, %83, !dbg !190
  br i1 %or.cond7, label %84, label %91, !dbg !190

true3
  %90 = icmp sge i32 %85, %89, !dbg !193
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

add8
  br i1 %or.cond7, label %84, label %91, !dbg !190

; <label>:84                                      ; preds = %77
  %85 = load i32* @Up_Separation, align 4, !dbg !190
  %86 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %87 = sext i32 %86 to i64, !dbg !192
  %88 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %87, !dbg !192
  %89 = load i32* %88, align 4, !dbg !192
  %90 = icmp sge i32 %85, %89, !dbg !193
  br label %91

true2
  store i32 %93, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %77, !dbg !181

; <label>:91                                      ; preds = %84, %77
  %92 = phi i1 [ false, %77 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  store i32 %93, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %91, %74
  %94 = load i32* %result.i.i, align 4, !dbg !194
  %95 = icmp ne i32 %94, 0, !dbg !179
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %91, %74
  %94 = load i32* %result.i.i, align 4, !dbg !194
  %95 = icmp ne i32 %94, 0, !dbg !179
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

true3
  %99 = icmp slt i32 %97, %98, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

add8
  br i1 %95, label %96, label %Inhibit_Biased_Climb.exit.i4.i, !dbg !179

; <label>:96                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %97 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %98 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %99 = icmp slt i32 %97, %98, !dbg !195
  %100 = zext i1 %99 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i4.i

true2
  store i32 %102, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %96, %Non_Crossing_Biased_Climb.exit.i
  %101 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %need_upward_RA.i, align 4
  %103 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %104 = icmp ne i32 %103, 0, !dbg !197
  %105 = load i32* @Up_Separation, align 4, !dbg !197
  %106 = add nsw i32 %105, 100, !dbg !197
  %107 = select i1 %104, i32 %106, i32 %105, !dbg !197
  %108 = load i32* @Down_Separation, align 4, !dbg !198
  %109 = icmp sgt i32 %107, %108, !dbg !198
  %110 = zext i1 %109 to i32, !dbg !198
  store i32 %110, i32* %upward_preferred.i1.i, align 4, !dbg !198
  %111 = load i32* %upward_preferred.i1.i, align 4, !dbg !200
  %112 = icmp ne i32 %111, 0, !dbg !200
  br i1 %112, label %113, label %130, !dbg !200

true1
  br i1 %or.cond9, label %120, label %127, !dbg !203
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:113                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %114 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %115 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %116 = icmp slt i32 %114, %115, !dbg !202
  %117 = zext i1 %116 to i32, !dbg !202
  %118 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %119 = icmp sge i32 %118, 300, !dbg !203
  %or.cond9 = and i1 %116, %119, !dbg !203
  br i1 %or.cond9, label %120, label %127, !dbg !203

true3
  %126 = icmp sge i32 %121, %125, !dbg !206
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

add8
  br i1 %or.cond9, label %120, label %127, !dbg !203

; <label>:120                                     ; preds = %113
  %121 = load i32* @Down_Separation, align 4, !dbg !203
  %122 = load i32* @Alt_Layer_Value, align 4, !dbg !205
  %123 = sext i32 %122 to i64, !dbg !205
  %124 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %123, !dbg !205
  %125 = load i32* %124, align 4, !dbg !205
  %126 = icmp sge i32 %121, %125, !dbg !206
  br label %127

true2
  store i32 %129, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:127                                     ; preds = %120, %113
  %128 = phi i1 [ false, %113 ], [ %126, %120 ]
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %133, label %135, label %147, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:130                                     ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %131 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %132 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %133 = icmp slt i32 %131, %132, !dbg !208
  %134 = zext i1 %133 to i32, !dbg !208
  br i1 %133, label %135, label %147, !dbg !209

true1
  br i1 %138, label %140, label %147, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

add8
  br i1 %133, label %135, label %147, !dbg !209

; <label>:135                                     ; preds = %130
  %136 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %137 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %138 = icmp slt i32 %136, %137, !dbg !208
  %139 = zext i1 %138 to i32, !dbg !208
  br i1 %138, label %140, label %147, !dbg !209

true3
  %146 = icmp sge i32 %141, %145, !dbg !212
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %133, label %135, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

add8
  br i1 %138, label %140, label %147, !dbg !209

; <label>:140                                     ; preds = %135
  %141 = load i32* @Up_Separation, align 4, !dbg !209
  %142 = load i32* @Alt_Layer_Value, align 4, !dbg !211
  %143 = sext i32 %142 to i64, !dbg !211
  %144 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %143, !dbg !211
  %145 = load i32* %144, align 4, !dbg !211
  %146 = icmp sge i32 %141, %145, !dbg !212
  br label %147

true2
  store i32 %149, i32* %result.i3.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %112, label %113, label %130, !dbg !200

; <label>:147                                     ; preds = %135, %140, %130
  %148 = phi i1 [ true, %130 ], [ false, %135 ], [ %146, %140 ]
  %149 = zext i1 %148 to i32
  store i32 %149, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %151, label %152, label %157, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %147, %127
  %150 = load i32* %result.i3.i, align 4, !dbg !213
  %151 = icmp ne i32 %150, 0, !dbg !199
  br i1 %151, label %152, label %157, !dbg !199

true3
  %155 = icmp slt i32 %153, %154, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

add8
  br i1 %151, label %152, label %157, !dbg !199

; <label>:152                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %153 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %154 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %155 = icmp slt i32 %153, %154, !dbg !214
  %156 = zext i1 %155 to i32, !dbg !214
  br label %157

true2
  store i32 %159, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %152, %Non_Crossing_Biased_Descend.exit.i
  %158 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %155, %152 ]
  %159 = zext i1 %158 to i32
  store i32 %159, i32* %need_downward_RA.i, align 4
  %160 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %161 = icmp ne i32 %160, 0, !dbg !216
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %163 = icmp ne i32 %162, 0, !dbg !216
  %or.cond11 = and i1 %161, %163, !dbg !216
  br i1 %or.cond11, label %164, label %165, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:164                                     ; preds = %157
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %167, label %168, label %169, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:165                                     ; preds = %157
  %166 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %167 = icmp ne i32 %166, 0, !dbg !219
  br i1 %167, label %168, label %169, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:168                                     ; preds = %165
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %171, label %172, label %173, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:169                                     ; preds = %165
  %170 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %171 = icmp ne i32 %170, 0, !dbg !222
  br i1 %171, label %172, label %173, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:172                                     ; preds = %169
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %164, label %165, !dbg !216

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %167, label %168, label %169, !dbg !219

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %171, label %172, label %173, !dbg !222

; <label>:173                                     ; preds = %169
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %174, i32* %ret, align 4, !dbg !171
true3
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
add8
  br i1 %or.cond33, label %199, label %204, !dbg !227

; <label>:199                                     ; preds = %alt_sep_test.exit
  %200 = load i32* %ret, align 4, !dbg !229
  %201 = icmp eq i32 %200, 1, !dbg !229
  %202 = zext i1 %201 to i32, !dbg !229
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
  br label %204, !dbg !229

true3
  %207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %206), !dbg !230
222
add5
  %203 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %202), !dbg !229
add5
  %207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %206), !dbg !230
size: 18 18 21 21
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to function: klee_assert
KLEE: WARNING: undefined reference to variable: stdout
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v33.c:53: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
[0;1;34m
Run Time: 0.000000e+00 4.810000e-04
Analysis Time: 0.000000e+00
Update State Time: 1.000000e-06
Update Summary Time: 1.000000e-06
Prune State Time: 0.000000e+00 6.000000e-06 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 0
[0mElapsed: 00:00:00


KLEE: done: total instructions = 23
KLEE: done: completed paths = 1
KLEE: done: generated tests = 0
0.10user 0.05system 0:00.16elapsed 99%CPU (0avgtext+0avgdata 15032maxresident)k
0inputs+472outputs (0major+713minor)pagefaults 0swaps
