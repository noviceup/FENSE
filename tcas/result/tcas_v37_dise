KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-90"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
111
Num: 0 4
333
true2
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %64, label %66, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

true2
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond7, label %82, label %87, !dbg !190

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

true2
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond9, label %116, label %121, !dbg !203

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

true2
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %132, label %134, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

222
add5
  store i32 %74, i32* %result.i.i, align 4
add5
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
add5
  store i32 %98, i32* %need_upward_RA.i, align 4
add5
  store i32 %89, i32* %result.i.i, align 4
add5
  br i1 %or.cond11, label %156, label %157, !dbg !216
add5
  br i1 %159, label %160, label %161, !dbg !219
add5
  store i32 %123, i32* %result.i5.i, align 4
add5
  br i1 %143, label %144, label %149, !dbg !199
add5
  store i32 %151, i32* %need_downward_RA.i, align 4
add5
  store i32 %141, i32* %result.i5.i, align 4
add5
  br i1 %163, label %164, label %165, !dbg !222
size: 0 15 4 19
Num: 15 19
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %59, label %61, label %72, !dbg !184
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %127, label %129, label %139, !dbg !209
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %159, label %160, label %161, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %22 = icmp sgt i32 %21, 600, !dbg !170
add8
  br i1 %or.cond, label %20, label %23, !dbg !170

; <label>:20                                      ; preds = %0
  %21 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %22 = icmp sgt i32 %21, 600, !dbg !170
  br label %23

true2
  store i32 %25, i32* %enabled.i, align 4
true3
  %33 = icmp eq i32 %32, 0, !dbg !173
add8
  br i1 %30, label %31, label %34, !dbg !173

; <label>:31                                      ; preds = %23
  %32 = load i32* @Other_RAC, align 4, !dbg !173
  %33 = icmp eq i32 %32, 0, !dbg !173
  br label %34

true2
  store i32 %36, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:39                                      ; preds = %34
  %40 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %41 = icmp ne i32 %40, 0, !dbg !175
  %42 = load i32* %intent_not_known.i, align 4, !dbg !175
  %43 = icmp ne i32 %42, 0, !dbg !175
  %or.cond3 = and i1 %41, %43, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %44 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %45 = icmp ne i32 %44, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %45, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

true1
  br i1 %59, label %61, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

true1
  br i1 %64, label %66, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

true2
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %64, label %66, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

true2
  store i32 %74, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %82, label %87, !dbg !190
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

true2
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond7, label %82, label %87, !dbg !190

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

true2
  store i32 %89, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

true3
  %95 = icmp slt i32 %93, %94, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

true2
  store i32 %98, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

true1
  br i1 %or.cond9, label %116, label %121, !dbg !203
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

true2
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond9, label %116, label %121, !dbg !203

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

true2
  store i32 %123, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %127, label %129, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

true1
  br i1 %132, label %134, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

true2
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %132, label %134, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

true2
  store i32 %141, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %143, label %144, label %149, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

true3
  %147 = icmp slt i32 %145, %146, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %143, label %144, label %149, !dbg !199

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

true2
  store i32 %151, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %159, label %160, label %161, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %163, label %164, label %165, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

222
add5
  store i32 %166, i32* %ret, align 4, !dbg !171
add5
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
add5
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %198), !dbg !230
size: 15 17 19 25
Num: 17 25
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %59, label %61, label %72, !dbg !184
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %127, label %129, label %139, !dbg !209
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %159, label %160, label %161, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %22 = icmp sgt i32 %21, 600, !dbg !170
add8
  br i1 %or.cond, label %20, label %23, !dbg !170

; <label>:20                                      ; preds = %0
  %21 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %22 = icmp sgt i32 %21, 600, !dbg !170
  br label %23

true2
  store i32 %25, i32* %enabled.i, align 4
true3
  %33 = icmp eq i32 %32, 0, !dbg !173
add8
  br i1 %30, label %31, label %34, !dbg !173

; <label>:31                                      ; preds = %23
  %32 = load i32* @Other_RAC, align 4, !dbg !173
  %33 = icmp eq i32 %32, 0, !dbg !173
  br label %34

true2
  store i32 %36, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:39                                      ; preds = %34
  %40 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %41 = icmp ne i32 %40, 0, !dbg !175
  %42 = load i32* %intent_not_known.i, align 4, !dbg !175
  %43 = icmp ne i32 %42, 0, !dbg !175
  %or.cond3 = and i1 %41, %43, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %44 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %45 = icmp ne i32 %44, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %45, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

true1
  br i1 %59, label %61, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

true1
  br i1 %64, label %66, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

true2
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %64, label %66, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

true2
  store i32 %74, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %82, label %87, !dbg !190
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

true2
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond7, label %82, label %87, !dbg !190

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

true2
  store i32 %89, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

true3
  %95 = icmp slt i32 %93, %94, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

true2
  store i32 %98, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

true1
  br i1 %or.cond9, label %116, label %121, !dbg !203
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

true2
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond9, label %116, label %121, !dbg !203

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

true2
  store i32 %123, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %127, label %129, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

true1
  br i1 %132, label %134, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

true2
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %132, label %134, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

true2
  store i32 %141, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %143, label %144, label %149, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

true3
  %147 = icmp slt i32 %145, %146, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %143, label %144, label %149, !dbg !199

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

true2
  store i32 %151, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %159, label %160, label %161, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %163, label %164, label %165, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %166, i32* %ret, align 4, !dbg !171
true3
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
add8
  br i1 %or.cond33, label %191, label %196, !dbg !227

; <label>:191                                     ; preds = %alt_sep_test.exit
  %192 = load i32* %ret, align 4, !dbg !229
  %193 = icmp eq i32 %192, 1, !dbg !229
  %194 = zext i1 %193 to i32, !dbg !229
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
  br label %196, !dbg !229

true3
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %198), !dbg !230
222
add5
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
add5
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %198), !dbg !230
size: 17 18 25 25
Num: 18 25
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %55, label %56, label %75, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %108, label %109, label %124, !dbg !200
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %143, label %144, label %149, !dbg !199
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %156, label %157, !dbg !216
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %59, label %61, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %or.cond7, label %82, label %87, !dbg !190
  br i1 %55, label %56, label %75, !dbg !181
add4
  br i1 %64, label %66, label %72, !dbg !184
  br i1 %59, label %61, label %72, !dbg !184
add4
  br i1 %or.cond9, label %116, label %121, !dbg !203
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %127, label %129, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %108, label %109, label %124, !dbg !200
add4
  br i1 %132, label %134, label %139, !dbg !209
  br i1 %127, label %129, label %139, !dbg !209
add4
  br i1 %159, label %160, label %161, !dbg !219
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %or.cond11, label %156, label %157, !dbg !216
add4
  br i1 %163, label %164, label %165, !dbg !222
  br i1 %159, label %160, label %161, !dbg !219
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %22 = icmp sgt i32 %21, 600, !dbg !170
add8
  br i1 %or.cond, label %20, label %23, !dbg !170

; <label>:20                                      ; preds = %0
  %21 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %22 = icmp sgt i32 %21, 600, !dbg !170
  br label %23

true2
  store i32 %25, i32* %enabled.i, align 4
true3
  %33 = icmp eq i32 %32, 0, !dbg !173
add8
  br i1 %30, label %31, label %34, !dbg !173

; <label>:31                                      ; preds = %23
  %32 = load i32* @Other_RAC, align 4, !dbg !173
  %33 = icmp eq i32 %32, 0, !dbg !173
  br label %34

true2
  store i32 %36, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:39                                      ; preds = %34
  %40 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %41 = icmp ne i32 %40, 0, !dbg !175
  %42 = load i32* %intent_not_known.i, align 4, !dbg !175
  %43 = icmp ne i32 %42, 0, !dbg !175
  %or.cond3 = and i1 %41, %43, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %44 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %45 = icmp ne i32 %44, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %45, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %39
  %46 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %47 = icmp ne i32 %46, 0, !dbg !177
  %48 = load i32* @Up_Separation, align 4, !dbg !177
  %49 = add nsw i32 %48, 100, !dbg !177
  %50 = select i1 %47, i32 %49, i32 %48, !dbg !177
  %51 = load i32* @Down_Separation, align 4, !dbg !178
  %52 = icmp sgt i32 %50, %51, !dbg !178
  %53 = zext i1 %52 to i32, !dbg !178
  store i32 %53, i32* %upward_preferred.i.i, align 4, !dbg !178
  %54 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %55 = icmp ne i32 %54, 0, !dbg !181
  br i1 %55, label %56, label %75, !dbg !181

true1
  br i1 %59, label %61, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:56                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %57 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %58 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %59 = icmp slt i32 %57, %58, !dbg !183
  %60 = zext i1 %59 to i32, !dbg !183
  br i1 %59, label %61, label %72, !dbg !184

true1
  br i1 %64, label %66, label %72, !dbg !184
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:61                                      ; preds = %56
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %63 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %64 = icmp slt i32 %62, %63, !dbg !183
  %65 = zext i1 %64 to i32, !dbg !183
  br i1 %64, label %66, label %72, !dbg !184

true2
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %59, label %61, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

add8
  br i1 %64, label %66, label %72, !dbg !184

; <label>:66                                      ; preds = %61
  %67 = load i32* @Down_Separation, align 4, !dbg !184
  %68 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !186
  store i32 %68, i32* %result.i1.i.i, align 4, !dbg !186
  %69 = load i32* %result.i1.i.i, align 4, !dbg !186
  %70 = icmp sge i32 %67, %69, !dbg !187
  %71 = xor i1 %70, true, !dbg !187
  br label %72

true2
  store i32 %74, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:72                                      ; preds = %61, %66, %56
  %73 = phi i1 [ true, %56 ], [ false, %61 ], [ %71, %66 ]
  %74 = zext i1 %73 to i32
  store i32 %74, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %82, label %87, !dbg !190
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:75                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %76 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %77 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %78 = icmp slt i32 %76, %77, !dbg !189
  %79 = zext i1 %78 to i32, !dbg !189
  %80 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %81 = icmp sge i32 %80, 300, !dbg !190
  %or.cond7 = and i1 %78, %81, !dbg !190
  br i1 %or.cond7, label %82, label %87, !dbg !190

true2
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

add8
  br i1 %or.cond7, label %82, label %87, !dbg !190

; <label>:82                                      ; preds = %75
  %83 = load i32* @Up_Separation, align 4, !dbg !190
  %84 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !192
  store i32 %84, i32* %result.i.i.i, align 4, !dbg !192
  %85 = load i32* %result.i.i.i, align 4, !dbg !192
  %86 = icmp sge i32 %83, %85, !dbg !193
  br label %87

true2
  store i32 %89, i32* %result.i.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %55, label %56, label %75, !dbg !181

; <label>:87                                      ; preds = %82, %75
  %88 = phi i1 [ false, %75 ], [ %86, %82 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true1
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %87, %72
  %90 = load i32* %result.i.i, align 4, !dbg !194
  %91 = icmp ne i32 %90, 0, !dbg !179
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

true3
  %95 = icmp slt i32 %93, %94, !dbg !195
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

add8
  br i1 %91, label %92, label %Inhibit_Biased_Climb.exit.i6.i, !dbg !179

; <label>:92                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %93 = load i32* @Own_Tracked_Alt, align 4, !dbg !195
  %94 = load i32* @Other_Tracked_Alt, align 4, !dbg !195
  %95 = icmp slt i32 %93, %94, !dbg !195
  %96 = zext i1 %95 to i32, !dbg !195
  br label %Inhibit_Biased_Climb.exit.i6.i

true2
  store i32 %98, i32* %need_upward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i6.i:                   ; preds = %92, %Non_Crossing_Biased_Climb.exit.i
  %97 = phi i1 [ false, %Non_Crossing_Biased_Climb.exit.i ], [ %95, %92 ]
  %98 = zext i1 %97 to i32
  store i32 %98, i32* %need_upward_RA.i, align 4
  %99 = load i32* @Climb_Inhibit, align 4, !dbg !197
  %100 = icmp ne i32 %99, 0, !dbg !197
  %101 = load i32* @Up_Separation, align 4, !dbg !197
  %102 = add nsw i32 %101, 100, !dbg !197
  %103 = select i1 %100, i32 %102, i32 %101, !dbg !197
  %104 = load i32* @Down_Separation, align 4, !dbg !198
  %105 = icmp sgt i32 %103, %104, !dbg !198
  %106 = zext i1 %105 to i32, !dbg !198
  store i32 %106, i32* %upward_preferred.i3.i, align 4, !dbg !198
  %107 = load i32* %upward_preferred.i3.i, align 4, !dbg !200
  %108 = icmp ne i32 %107, 0, !dbg !200
  br i1 %108, label %109, label %124, !dbg !200

true1
  br i1 %or.cond9, label %116, label %121, !dbg !203
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:109                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %110 = load i32* @Own_Tracked_Alt, align 4, !dbg !202
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !202
  %112 = icmp slt i32 %110, %111, !dbg !202
  %113 = zext i1 %112 to i32, !dbg !202
  %114 = load i32* @Cur_Vertical_Sep, align 4, !dbg !203
  %115 = icmp sge i32 %114, 300, !dbg !203
  %or.cond9 = and i1 %112, %115, !dbg !203
  br i1 %or.cond9, label %116, label %121, !dbg !203

true2
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

add8
  br i1 %or.cond9, label %116, label %121, !dbg !203

; <label>:116                                     ; preds = %109
  %117 = load i32* @Down_Separation, align 4, !dbg !203
  %118 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !205
  store i32 %118, i32* %result.i1.i1.i, align 4, !dbg !205
  %119 = load i32* %result.i1.i1.i, align 4, !dbg !205
  %120 = icmp sge i32 %117, %119, !dbg !206
  br label %121

true2
  store i32 %123, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:121                                     ; preds = %116, %109
  %122 = phi i1 [ false, %109 ], [ %120, %116 ]
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !207

true1
  br i1 %127, label %129, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:124                                     ; preds = %Inhibit_Biased_Climb.exit.i6.i
  %125 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %126 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %127 = icmp slt i32 %125, %126, !dbg !208
  %128 = zext i1 %127 to i32, !dbg !208
  br i1 %127, label %129, label %139, !dbg !209

true1
  br i1 %132, label %134, label %139, !dbg !209
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:129                                     ; preds = %124
  %130 = load i32* @Other_Tracked_Alt, align 4, !dbg !208
  %131 = load i32* @Own_Tracked_Alt, align 4, !dbg !208
  %132 = icmp slt i32 %130, %131, !dbg !208
  %133 = zext i1 %132 to i32, !dbg !208
  br i1 %132, label %134, label %139, !dbg !209

true2
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %127, label %129, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

add8
  br i1 %132, label %134, label %139, !dbg !209

; <label>:134                                     ; preds = %129
  %135 = load i32* @Up_Separation, align 4, !dbg !209
  %136 = load i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !211
  store i32 %136, i32* %result.i.i2.i, align 4, !dbg !211
  %137 = load i32* %result.i.i2.i, align 4, !dbg !211
  %138 = icmp sge i32 %135, %137, !dbg !212
  br label %139

true2
  store i32 %141, i32* %result.i5.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %108, label %109, label %124, !dbg !200

; <label>:139                                     ; preds = %129, %134, %124
  %140 = phi i1 [ true, %124 ], [ false, %129 ], [ %138, %134 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %result.i5.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %143, label %144, label %149, !dbg !199
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %139, %121
  %142 = load i32* %result.i5.i, align 4, !dbg !213
  %143 = icmp ne i32 %142, 0, !dbg !199
  br i1 %143, label %144, label %149, !dbg !199

true3
  %147 = icmp slt i32 %145, %146, !dbg !214
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

add8
  br i1 %143, label %144, label %149, !dbg !199

; <label>:144                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %145 = load i32* @Other_Tracked_Alt, align 4, !dbg !214
  %146 = load i32* @Own_Tracked_Alt, align 4, !dbg !214
  %147 = icmp slt i32 %145, %146, !dbg !214
  %148 = zext i1 %147 to i32, !dbg !214
  br label %149

true2
  store i32 %151, i32* %need_downward_RA.i, align 4
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:149                                     ; preds = %144, %Non_Crossing_Biased_Descend.exit.i
  %150 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %147, %144 ]
  %151 = zext i1 %150 to i32
  store i32 %151, i32* %need_downward_RA.i, align 4
  %152 = load i32* %need_upward_RA.i, align 4, !dbg !216
  %153 = icmp ne i32 %152, 0, !dbg !216
  %154 = load i32* %need_downward_RA.i, align 4, !dbg !216
  %155 = icmp ne i32 %154, 0, !dbg !216
  %or.cond11 = and i1 %153, %155, !dbg !216
  br i1 %or.cond11, label %156, label %157, !dbg !216

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:156                                     ; preds = %149
  store i32 0, i32* %alt_sep.i, align 4, !dbg !218
  br label %alt_sep_test.exit, !dbg !218

true1
  br i1 %159, label %160, label %161, !dbg !219
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:157                                     ; preds = %149
  %158 = load i32* %need_upward_RA.i, align 4, !dbg !219
  %159 = icmp ne i32 %158, 0, !dbg !219
  br i1 %159, label %160, label %161, !dbg !219

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:160                                     ; preds = %157
  store i32 1, i32* %alt_sep.i, align 4, !dbg !221
  br label %alt_sep_test.exit, !dbg !221

true1
  br i1 %163, label %164, label %165, !dbg !222
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:161                                     ; preds = %157
  %162 = load i32* %need_downward_RA.i, align 4, !dbg !222
  %163 = icmp ne i32 %162, 0, !dbg !222
  br i1 %163, label %164, label %165, !dbg !222

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:164                                     ; preds = %161
  store i32 2, i32* %alt_sep.i, align 4, !dbg !224
  br label %alt_sep_test.exit, !dbg !224

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
add8
  br i1 %38, label %39, label %alt_sep_test.exit, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %156, label %157, !dbg !216

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %159, label %160, label %161, !dbg !219

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

add8
  br i1 %163, label %164, label %165, !dbg !222

; <label>:165                                     ; preds = %161
  store i32 0, i32* %alt_sep.i, align 4, !dbg !225
  br label %alt_sep_test.exit

true2
  store i32 %166, i32* %ret, align 4, !dbg !171
true3
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
add8
  br i1 %or.cond33, label %191, label %196, !dbg !227

; <label>:191                                     ; preds = %alt_sep_test.exit
  %192 = load i32* %ret, align 4, !dbg !229
  %193 = icmp eq i32 %192, 1, !dbg !229
  %194 = zext i1 %193 to i32, !dbg !229
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
  br label %196, !dbg !229

true3
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %198), !dbg !230
222
add5
  %195 = call i32 (i32, ...)* bitcast (i32 (...)* @klee_assert to i32 (i32, ...)*)(i32 %194), !dbg !229
add5
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i32 %198), !dbg !230
size: 18 18 25 25
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to function: klee_assert
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(139625486160896, 24251168, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v37.c:192
0
0
0
0
0
2
0
0
1
0
0
0
0
2
0
KLEE: WARNING ONCE: calling external: klee_assert(0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v37.c:189
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v37.c:189: failed external call: klee_assert
KLEE: NOTE: now ignoring this error at this location
0
[0;1;34m
Run Time: 2.300000e-01 3.879000e-02
Analysis Time: 0.000000e+00
Update State Time: 3.100000e-05
Update Summary Time: 1.000000e-05
Prune State Time: 0.000000e+00 2.920000e-04 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 0
[0m1
0
Elapsed: 00:00:00


KLEE: done: total instructions = 1692
KLEE: done: completed paths = 19
KLEE: done: generated tests = 0
0.32user 0.06system 0:00.42elapsed 91%CPU (0avgtext+0avgdata 16732maxresident)k
0inputs+520outputs (0major+13062minor)pagefaults 0swaps
