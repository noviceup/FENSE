KLEE: output directory is "/home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/./klee-out-102"
KLEE: Using STP solver backend
1111
222
In computeACNAWN change lines: 41
add2
111
Num: 1 1
333
true1
  br i1 %47, label %49, label %57, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

true2
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

222
add5
  br i1 %or.cond11, label %139, label %140, !dbg !214
add5
  br i1 %142, label %143, label %144, !dbg !217
size: 1 6 1 8
Num: 6 8
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %60, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %87, label %88, label %105, !dbg !198
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %126, label %127, label %132, !dbg !197
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %139, label %140, !dbg !214
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %60, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %87, label %88, label %105, !dbg !198
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %126, label %127, label %132, !dbg !197
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %139, label %140, !dbg !214
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %43, label %44, label %60, !dbg !181
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %43, label %44, label %60, !dbg !181
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %108, label %110, label %122, !dbg !207
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %or.cond11, label %139, label %140, !dbg !214
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %or.cond11, label %139, label %140, !dbg !214
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %142, label %143, label %144, !dbg !217
333
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %60, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %60, !dbg !181

true1
  br i1 %47, label %49, label %57, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

true3
  %56 = xor i1 %55, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %47, label %49, label %57, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

true2
  store i32 %59, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %67, label %74, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

true3
  %73 = icmp sge i32 %68, %72, !dbg !193
add8
  br i1 %or.cond7, label %67, label %74, !dbg !190

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

true2
  store i32 %76, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true2
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

true1
  br i1 %or.cond9, label %95, label %102, !dbg !201
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

true3
  %101 = icmp sge i32 %96, %100, !dbg !204
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %or.cond9, label %95, label %102, !dbg !201

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

true2
  store i32 %104, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

true1
  br i1 %108, label %110, label %122, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

true1
  br i1 %113, label %115, label %122, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %108, label %110, label %122, !dbg !207

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

true3
  %121 = icmp sge i32 %116, %120, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %108, label %110, label %122, !dbg !207

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %113, label %115, label %122, !dbg !207

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

true2
  store i32 %124, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %126, label %127, label %132, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %122, %102
  %125 = load i32* %result.i3.i, align 4, !dbg !211
  %126 = icmp ne i32 %125, 0, !dbg !197
  br i1 %126, label %127, label %132, !dbg !197

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %122, %102
  %125 = load i32* %result.i3.i, align 4, !dbg !211
  %126 = icmp ne i32 %125, 0, !dbg !197
  br i1 %126, label %127, label %132, !dbg !197

true3
  %130 = icmp slt i32 %128, %129, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

add8
  br i1 %126, label %127, label %132, !dbg !197

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

true2
  store i32 %134, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:132                                     ; preds = %127, %Non_Crossing_Biased_Descend.exit.i
  %133 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %130, %127 ]
  %134 = zext i1 %133 to i32
  store i32 %134, i32* %need_downward_RA.i, align 4
  %135 = load i32* %need_upward_RA.i, align 4, !dbg !214
  %136 = icmp ne i32 %135, 0, !dbg !214
  %137 = load i32* %need_downward_RA.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !214
  %or.cond11 = and i1 %136, %138, !dbg !214
  br i1 %or.cond11, label %139, label %140, !dbg !214

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:132                                     ; preds = %127, %Non_Crossing_Biased_Descend.exit.i
  %133 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %130, %127 ]
  %134 = zext i1 %133 to i32
  store i32 %134, i32* %need_downward_RA.i, align 4
  %135 = load i32* %need_upward_RA.i, align 4, !dbg !214
  %136 = icmp ne i32 %135, 0, !dbg !214
  %137 = load i32* %need_downward_RA.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !214
  %or.cond11 = and i1 %136, %138, !dbg !214
  br i1 %or.cond11, label %139, label %140, !dbg !214

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

true1
  br i1 %142, label %143, label %144, !dbg !217
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %146, label %147, label %148, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %146, label %147, label %148, !dbg !220

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %146, label %147, label %148, !dbg !220

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

222
add5
  store i32 %149, i32* %ret, align 4, !dbg !171
add5
  br i1 %or.cond35, label %178, label %176, !dbg !225
add5
  %181 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %180), !dbg !228
size: 6 16 8 21
Num: 16 21
add4
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %60, !dbg !181
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %87, label %88, label %105, !dbg !198
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %126, label %127, label %132, !dbg !197
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %or.cond11, label %139, label %140, !dbg !214
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175
add4
  br i1 %43, label %44, label %60, !dbg !181
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %87, label %88, label %105, !dbg !198
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %126, label %127, label %132, !dbg !197
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %or.cond11, label %139, label %140, !dbg !214
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add4
  br i1 %47, label %49, label %57, !dbg !184
  br i1 %43, label %44, label %60, !dbg !181
add4
  br i1 %or.cond7, label %67, label %74, !dbg !190
  br i1 %43, label %44, label %60, !dbg !181
add4
  br i1 %or.cond9, label %95, label %102, !dbg !201
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %108, label %110, label %122, !dbg !207
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %87, label %88, label %105, !dbg !198
add4
  br i1 %113, label %115, label %122, !dbg !207
  br i1 %108, label %110, label %122, !dbg !207
add4
  br i1 %142, label %143, label %144, !dbg !217
  br i1 %or.cond11, label %139, label %140, !dbg !214
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %or.cond11, label %139, label %140, !dbg !214
add4
  br i1 %146, label %147, label %148, !dbg !220
  br i1 %142, label %143, label %144, !dbg !217
333
true2
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 0), align 4, !dbg !153
true3
  %10 = icmp sgt i32 %9, 600, !dbg !170
add8
  br i1 %or.cond, label %8, label %11, !dbg !170

; <label>:8                                       ; preds = %0
  %9 = load i32* @Cur_Vertical_Sep, align 4, !dbg !170
  %10 = icmp sgt i32 %9, 600, !dbg !170
  br label %11

true2
  store i32 %13, i32* %enabled.i, align 4
true3
  %21 = icmp eq i32 %20, 0, !dbg !173
add8
  br i1 %18, label %19, label %22, !dbg !173

; <label>:19                                      ; preds = %11
  %20 = load i32* @Other_RAC, align 4, !dbg !173
  %21 = icmp eq i32 %20, 0, !dbg !173
  br label %22

true2
  store i32 %24, i32* %intent_not_known.i, align 4
true1
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:27                                      ; preds = %22
  %28 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %29 = icmp ne i32 %28, 0, !dbg !175
  %30 = load i32* %intent_not_known.i, align 4, !dbg !175
  %31 = icmp ne i32 %30, 0, !dbg !175
  %or.cond3 = and i1 %29, %31, !dbg !175
  %or.cond3.not = xor i1 %or.cond3, true, !dbg !175
  %32 = load i32* %tcas_equipped.i, align 4, !dbg !175
  %33 = icmp ne i32 %32, 0, !dbg !175
  %or.cond5 = and i1 %or.cond3.not, %33, !dbg !175
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

true2
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %60, !dbg !181

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %27
  %34 = load i32* @Climb_Inhibit, align 4, !dbg !177
  %35 = icmp ne i32 %34, 0, !dbg !177
  %36 = load i32* @Up_Separation, align 4, !dbg !177
  %37 = add nsw i32 %36, 100, !dbg !177
  %38 = select i1 %35, i32 %37, i32 %36, !dbg !177
  %39 = load i32* @Down_Separation, align 4, !dbg !178
  %40 = icmp sgt i32 %38, %39, !dbg !178
  %41 = zext i1 %40 to i32, !dbg !178
  store i32 %41, i32* %upward_preferred.i.i, align 4, !dbg !178
  %42 = load i32* %upward_preferred.i.i, align 4, !dbg !181
  %43 = icmp ne i32 %42, 0, !dbg !181
  br i1 %43, label %44, label %60, !dbg !181

true1
  br i1 %47, label %49, label %57, !dbg !184
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:44                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %45 = load i32* @Own_Tracked_Alt, align 4, !dbg !183
  %46 = load i32* @Other_Tracked_Alt, align 4, !dbg !183
  %47 = icmp slt i32 %45, %46, !dbg !183
  %48 = zext i1 %47 to i32, !dbg !183
  br i1 %47, label %49, label %57, !dbg !184

true3
  %56 = xor i1 %55, true, !dbg !187
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

add8
  br i1 %47, label %49, label %57, !dbg !184

; <label>:49                                      ; preds = %44
  %50 = load i32* @Down_Separation, align 4, !dbg !184
  %51 = load i32* @Alt_Layer_Value, align 4, !dbg !186
  %52 = sext i32 %51 to i64, !dbg !186
  %53 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %52, !dbg !186
  %54 = load i32* %53, align 4, !dbg !186
  %55 = icmp sge i32 %50, %54, !dbg !187
  %56 = xor i1 %55, true, !dbg !187
  br label %57

true2
  store i32 %59, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:57                                      ; preds = %49, %44
  %58 = phi i1 [ false, %44 ], [ %56, %49 ]
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i, !dbg !188

true1
  br i1 %or.cond7, label %67, label %74, !dbg !190
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:60                                      ; preds = %Inhibit_Biased_Climb.exit.i.i
  %61 = load i32* @Other_Tracked_Alt, align 4, !dbg !189
  %62 = load i32* @Own_Tracked_Alt, align 4, !dbg !189
  %63 = icmp slt i32 %61, %62, !dbg !189
  %64 = zext i1 %63 to i32, !dbg !189
  %65 = load i32* @Cur_Vertical_Sep, align 4, !dbg !190
  %66 = icmp sge i32 %65, 300, !dbg !190
  %or.cond7 = and i1 %63, %66, !dbg !190
  br i1 %or.cond7, label %67, label %74, !dbg !190

true3
  %73 = icmp sge i32 %68, %72, !dbg !193
add8
  br i1 %or.cond7, label %67, label %74, !dbg !190

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:67                                      ; preds = %60
  %68 = load i32* @Up_Separation, align 4, !dbg !190
  %69 = load i32* @Alt_Layer_Value, align 4, !dbg !192
  %70 = sext i32 %69 to i64, !dbg !192
  %71 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %70, !dbg !192
  %72 = load i32* %71, align 4, !dbg !192
  %73 = icmp sge i32 %68, %72, !dbg !193
  br label %74

true2
  store i32 %76, i32* %result.i.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

add8
  br i1 %43, label %44, label %60, !dbg !181

; <label>:74                                      ; preds = %67, %60
  %75 = phi i1 [ false, %60 ], [ %73, %67 ]
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

true2
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %74, %57
  %77 = load i32* %result.i.i, align 4, !dbg !194
  store i32 %77, i32* %need_upward_RA.i, align 4, !dbg !179
  %78 = load i32* @Climb_Inhibit, align 4, !dbg !195
  %79 = icmp ne i32 %78, 0, !dbg !195
  %80 = load i32* @Up_Separation, align 4, !dbg !195
  %81 = add nsw i32 %80, 100, !dbg !195
  %82 = select i1 %79, i32 %81, i32 %80, !dbg !195
  %83 = load i32* @Down_Separation, align 4, !dbg !196
  %84 = icmp sgt i32 %82, %83, !dbg !196
  %85 = zext i1 %84 to i32, !dbg !196
  store i32 %85, i32* %upward_preferred.i1.i, align 4, !dbg !196
  %86 = load i32* %upward_preferred.i1.i, align 4, !dbg !198
  %87 = icmp ne i32 %86, 0, !dbg !198
  br i1 %87, label %88, label %105, !dbg !198

true1
  br i1 %or.cond9, label %95, label %102, !dbg !201
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:88                                      ; preds = %Non_Crossing_Biased_Climb.exit.i
  %89 = load i32* @Own_Tracked_Alt, align 4, !dbg !200
  %90 = load i32* @Other_Tracked_Alt, align 4, !dbg !200
  %91 = icmp slt i32 %89, %90, !dbg !200
  %92 = zext i1 %91 to i32, !dbg !200
  %93 = load i32* @Cur_Vertical_Sep, align 4, !dbg !201
  %94 = icmp sge i32 %93, 300, !dbg !201
  %or.cond9 = and i1 %91, %94, !dbg !201
  br i1 %or.cond9, label %95, label %102, !dbg !201

true3
  %101 = icmp sge i32 %96, %100, !dbg !204
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

add8
  br i1 %or.cond9, label %95, label %102, !dbg !201

; <label>:95                                      ; preds = %88
  %96 = load i32* @Down_Separation, align 4, !dbg !201
  %97 = load i32* @Alt_Layer_Value, align 4, !dbg !203
  %98 = sext i32 %97 to i64, !dbg !203
  %99 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %98, !dbg !203
  %100 = load i32* %99, align 4, !dbg !203
  %101 = icmp sge i32 %96, %100, !dbg !204
  br label %102

true2
  store i32 %104, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:102                                     ; preds = %95, %88
  %103 = phi i1 [ false, %88 ], [ %101, %95 ]
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i, !dbg !205

true1
  br i1 %108, label %110, label %122, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:105                                     ; preds = %Non_Crossing_Biased_Climb.exit.i
  %106 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %107 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %108 = icmp slt i32 %106, %107, !dbg !206
  %109 = zext i1 %108 to i32, !dbg !206
  br i1 %108, label %110, label %122, !dbg !207

true1
  br i1 %113, label %115, label %122, !dbg !207
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

add8
  br i1 %108, label %110, label %122, !dbg !207

; <label>:110                                     ; preds = %105
  %111 = load i32* @Other_Tracked_Alt, align 4, !dbg !206
  %112 = load i32* @Own_Tracked_Alt, align 4, !dbg !206
  %113 = icmp slt i32 %111, %112, !dbg !206
  %114 = zext i1 %113 to i32, !dbg !206
  br i1 %113, label %115, label %122, !dbg !207

true3
  %121 = icmp sge i32 %116, %120, !dbg !210
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %108, label %110, label %122, !dbg !207

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

add8
  br i1 %113, label %115, label %122, !dbg !207

; <label>:115                                     ; preds = %110
  %116 = load i32* @Up_Separation, align 4, !dbg !207
  %117 = load i32* @Alt_Layer_Value, align 4, !dbg !209
  %118 = sext i32 %117 to i64, !dbg !209
  %119 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i32 0, i64 %118, !dbg !209
  %120 = load i32* %119, align 4, !dbg !209
  %121 = icmp sge i32 %116, %120, !dbg !210
  br label %122

true2
  store i32 %124, i32* %result.i3.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

add8
  br i1 %87, label %88, label %105, !dbg !198

; <label>:122                                     ; preds = %110, %115, %105
  %123 = phi i1 [ true, %105 ], [ false, %110 ], [ %121, %115 ]
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %result.i3.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

true1
  br i1 %126, label %127, label %132, !dbg !197
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %122, %102
  %125 = load i32* %result.i3.i, align 4, !dbg !211
  %126 = icmp ne i32 %125, 0, !dbg !197
  br i1 %126, label %127, label %132, !dbg !197

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

Non_Crossing_Biased_Descend.exit.i:               ; preds = %122, %102
  %125 = load i32* %result.i3.i, align 4, !dbg !211
  %126 = icmp ne i32 %125, 0, !dbg !197
  br i1 %126, label %127, label %132, !dbg !197

true3
  %130 = icmp slt i32 %128, %129, !dbg !212
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

add8
  br i1 %126, label %127, label %132, !dbg !197

; <label>:127                                     ; preds = %Non_Crossing_Biased_Descend.exit.i
  %128 = load i32* @Other_Tracked_Alt, align 4, !dbg !212
  %129 = load i32* @Own_Tracked_Alt, align 4, !dbg !212
  %130 = icmp slt i32 %128, %129, !dbg !212
  %131 = zext i1 %130 to i32, !dbg !212
  br label %132

true2
  store i32 %134, i32* %need_downward_RA.i, align 4
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:132                                     ; preds = %127, %Non_Crossing_Biased_Descend.exit.i
  %133 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %130, %127 ]
  %134 = zext i1 %133 to i32
  store i32 %134, i32* %need_downward_RA.i, align 4
  %135 = load i32* %need_upward_RA.i, align 4, !dbg !214
  %136 = icmp ne i32 %135, 0, !dbg !214
  %137 = load i32* %need_downward_RA.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !214
  %or.cond11 = and i1 %136, %138, !dbg !214
  br i1 %or.cond11, label %139, label %140, !dbg !214

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:132                                     ; preds = %127, %Non_Crossing_Biased_Descend.exit.i
  %133 = phi i1 [ false, %Non_Crossing_Biased_Descend.exit.i ], [ %130, %127 ]
  %134 = zext i1 %133 to i32
  store i32 %134, i32* %need_downward_RA.i, align 4
  %135 = load i32* %need_upward_RA.i, align 4, !dbg !214
  %136 = icmp ne i32 %135, 0, !dbg !214
  %137 = load i32* %need_downward_RA.i, align 4, !dbg !214
  %138 = icmp ne i32 %137, 0, !dbg !214
  %or.cond11 = and i1 %136, %138, !dbg !214
  br i1 %or.cond11, label %139, label %140, !dbg !214

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:139                                     ; preds = %132
  store i32 0, i32* %alt_sep.i, align 4, !dbg !216
  br label %alt_sep_test.exit, !dbg !216

true1
  br i1 %142, label %143, label %144, !dbg !217
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:140                                     ; preds = %132
  %141 = load i32* %need_upward_RA.i, align 4, !dbg !217
  %142 = icmp ne i32 %141, 0, !dbg !217
  br i1 %142, label %143, label %144, !dbg !217

true2
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:143                                     ; preds = %140
  store i32 1, i32* %alt_sep.i, align 4, !dbg !219
  br label %alt_sep_test.exit, !dbg !219

true1
  br i1 %146, label %147, label %148, !dbg !220
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:144                                     ; preds = %140
  %145 = load i32* %need_downward_RA.i, align 4, !dbg !220
  %146 = icmp ne i32 %145, 0, !dbg !220
  br i1 %146, label %147, label %148, !dbg !220

true2
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

add8
  br i1 %146, label %147, label %148, !dbg !220

; <label>:147                                     ; preds = %144
  store i32 2, i32* %alt_sep.i, align 4, !dbg !222
  br label %alt_sep_test.exit, !dbg !222

true2
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
add8
  br i1 %26, label %27, label %alt_sep_test.exit, !dbg !175

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %or.cond5, label %alt_sep_test.exit, label %Inhibit_Biased_Climb.exit.i.i, !dbg !175

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %or.cond11, label %139, label %140, !dbg !214

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %142, label %143, label %144, !dbg !217

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

add8
  br i1 %146, label %147, label %148, !dbg !220

; <label>:148                                     ; preds = %144
  store i32 0, i32* %alt_sep.i, align 4, !dbg !223
  br label %alt_sep_test.exit

true2
  store i32 %149, i32* %ret, align 4, !dbg !171
true3
  %177 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !227
add8
  br i1 %or.cond35, label %178, label %176, !dbg !225

; <label>:176                                     ; preds = %alt_sep_test.exit
  %177 = call i32 (i8*, i8*, i32, i8*, ...)* bitcast (i32 (...)* @__assert_fail to i32 (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str13, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.main, i32 0, i32 0)), !dbg !227
  br label %178, !dbg !227

true3
  %181 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %180), !dbg !228
222
add5
  %181 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([4 x i8]* @.str14, i32 0, i32 0), i32 %180), !dbg !228
size: 16 16 21 21
Memory: 0
KLEE: WARNING: undefined reference to function: fprintf
KLEE: WARNING: undefined reference to variable: stdout
KLEE: WARNING ONCE: calling external: fprintf(139795999831040, 25472512, 0) at /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v40.c:193
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v40.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v40.c:59: memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
memory: 11
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
KLEE: ERROR: /home/easyqiu/installed/klee-1.4.0/examples/ISE/tcas/tcas_v40.c:190: ASSERTION FAIL: ret==2
KLEE: NOTE: now ignoring this error at this location
0
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
[0;1;34m
Run Time: 6.763000e+01 1.766860e+01
Analysis Time: 0.000000e+00
Update State Time: 1.899000e-03
Update Summary Time: 4.510000e-04
Prune State Time: 0.000000e+00 1.584800e-02 0.000000e+00
Setting: dise & ise & isum --> 1 0 0
Max Memory: 11
[0m0
0
Elapsed: 00:01:08


KLEE: done: total instructions = 96401
KLEE: done: completed paths = 1143
KLEE: done: generated tests = 0
56.77user 5.75system 1:07.78elapsed 92%CPU (0avgtext+0avgdata 35840maxresident)k
0inputs+488outputs (0major+4614682minor)pagefaults 0swaps
